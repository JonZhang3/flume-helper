(function(e){function t(t){for(var n,o,s=t[0],l=t[1],c=t[2],u=0,p=[];u<s.length;u++)o=s[u],Object.prototype.hasOwnProperty.call(a,o)&&a[o]&&p.push(a[o][0]),a[o]=0;for(n in l)Object.prototype.hasOwnProperty.call(l,n)&&(e[n]=l[n]);d&&d(t);while(p.length)p.shift()();return r.push.apply(r,c||[]),i()}function i(){for(var e,t=0;t<r.length;t++){for(var i=r[t],n=!0,s=1;s<i.length;s++){var l=i[s];0!==a[l]&&(n=!1)}n&&(r.splice(t--,1),e=o(o.s=i[0]))}return e}var n={},a={index:0},r=[];function o(t){if(n[t])return n[t].exports;var i=n[t]={i:t,l:!1,exports:{}};return e[t].call(i.exports,i,i.exports,o),i.l=!0,i.exports}o.m=e,o.c=n,o.d=function(e,t,i){o.o(e,t)||Object.defineProperty(e,t,{enumerable:!0,get:i})},o.r=function(e){"undefined"!==typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},o.t=function(e,t){if(1&t&&(e=o(e)),8&t)return e;if(4&t&&"object"===typeof e&&e&&e.__esModule)return e;var i=Object.create(null);if(o.r(i),Object.defineProperty(i,"default",{enumerable:!0,value:e}),2&t&&"string"!=typeof e)for(var n in e)o.d(i,n,function(t){return e[t]}.bind(null,n));return i},o.n=function(e){var t=e&&e.__esModule?function(){return e["default"]}:function(){return e};return o.d(t,"a",t),t},o.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},o.p="/";var s=window["webpackJsonp"]=window["webpackJsonp"]||[],l=s.push.bind(s);s.push=t,s=s.slice();for(var c=0;c<s.length;c++)t(s[c]);var d=l;r.push([0,"chunk-vendors"]),i()})({0:function(e,t,i){e.exports=i("b635")},"4d71":function(e,t,i){},"93a0":function(e,t,i){},b635:function(e,t,i){"use strict";i.r(t);i("e260"),i("e6cf"),i("cca6"),i("a79d");var n=i("2b0e"),a=i("5c96"),r=i.n(a),o=(i("0fae"),i("4d71"),i("8c4f")),s=function(){var e=this,t=e.$createElement,i=e._self._c||t;return i("el-container",{staticClass:"global-container"},[i("el-row",{staticStyle:{"text-align":"right"}},[i("el-button",{attrs:{type:"primary",size:"mini",icon:"el-icon-plus"},on:{click:function(t){return e.$router.push("/configs/new")}}},[e._v("新增配置")])],1),i("el-row",{staticStyle:{flex:"1"}},[i("el-table",{attrs:{stripe:"",data:e.configs}},[i("el-table-column",{attrs:{prop:"name",label:"名称"}}),i("el-table-column",{attrs:{prop:"createTime",label:"创建时间"}}),i("el-table-column",{attrs:{prop:"updateTime",label:"修改时间"}}),i("el-table-column",{attrs:{label:"操作"},scopedSlots:e._u([{key:"default",fn:function(t){return[i("span",{staticClass:"el-link-group"},[i("el-link",{attrs:{underline:!1,type:"primary"},on:{click:function(i){return e.handleView(t.row)}}},[e._v("查看")]),i("el-link",{attrs:{underline:!1,type:"primary"},on:{click:function(i){return e.handleEdit(t.row)}}},[e._v("编辑")]),i("el-link",{attrs:{underline:!1,type:"danger"},on:{click:function(i){return e.handleDelete(t.row,i)}}},[e._v("删除")])],1)]}}])})],1)],1),i("el-row",{staticStyle:{"text-align":"right","margin-top":"10px"}},[i("el-pagination",{attrs:{background:"",layout:"prev,pager,next",small:"","page-size":e.pager.pageSize,"hide-on-single-page":!0,"current-page":e.pager.page,total:e.pager.total},on:{"current-change":e.handlePageChange}})],1)],1)},l=[],c=(i("b0c0"),i("d3b7"),i("bc3a")),d=i.n(c),u=i("b383"),p=i.n(u),f=i("d645"),h=i.n(f);d.a.defaults.timeout=h.a.httpTimeout,d.a.defaults.baseURL=h.a.baseUrl,d.a.defaults.headers.post["Content-Type"]="application/x-www-form-urlencoded;charset=UTF-8",d.a.defaults.withCredentials=!0;var m=function(e,t){var i,n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{useLoading:!0,loadingText:""};return n.useLoading&&(i=a["Loading"].service({fullscreen:!0,text:n.loadingText?n.loadingText:"拼命加载中..."})),new Promise((function(n,a){d.a.get(e,{params:t}).then((function(e){i&&i.close(),n(e.data)})).catch((function(e){i&&i.close(),a(e)}))}))},y=function(e,t){var i,n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{useLoading:!0,loadingText:""};return n.useLoading&&(i=a["Loading"].service({fullscreen:!0,text:n.loadingText?n.loadingText:"拼命加载中..."})),new Promise((function(a,r){d.a.post(e,p.a.stringify(t),n).then((function(e){i&&i.close(),a(e.data)})).catch((function(e){i&&i.close(),r(e)}))}))},g=function(e,t){var i,n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{useLoading:!0,loadingText:""};return n.useLoading&&(i=a["Loading"].service({fullscreen:!0,text:n.loadingText?n.loadingText:"拼命加载中..."})),new Promise((function(n,a){d.a.delete(e,{params:t}).then((function(e){i&&i.close(),n(e.data)})).catch((function(e){i&&i.close(),a(e)}))}))},b=function(e,t){var i,n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{useLoading:!0,loadingText:""};return n.useLoading&&(i=a["Loading"].service({fullscreen:!0,text:n.loadingText?n.loadingText:"拼命加载中..."})),new Promise((function(a,r){d.a.put(e,p.a.stringify(t),n).then((function(e){i&&i.close(),a(e.data)})).catch((function(e){i&&i.close(),r(e)}))}))},v={addConfig:function(e,t){return b("/api/config",e,t)},updateConfig:function(e,t){return y("/api/config/".concat(e),t)},deleteConfig:function(e){return g("/api/config/".concat(e))},pageQueryConfig:function(e){return m("/api/config",e)},getConfig:function(e){return m("/api/config/".concat(e))}},S={config:v},k={name:"configs",data:function(){return{viewConfigDialogVisible:!1,viewconfigId:"",pager:{pageSize:10,page:1,total:0},configs:[]}},mounted:function(){this.pageListConfigs(null,1)},methods:{handleEdit:function(e){this.$router.push("/configs/edit/".concat(e.id))},handleView:function(e){this.$router.push("/configs/view/".concat(e.id))},handlePageChange:function(e){this.pageListConfigs(null,e)},handleDelete:function(e,t){var i=this;t.stopPropagation(),t.preventDefault(),this.$confirm('<span>确定删除 [<strong style="color: #f56c6c;">'.concat(e.name,"</strong>] 配置吗</span>"),"提示",{dangerouslyUseHTMLString:!0,confirmButtonText:"删除",type:"warning"}).then((function(){i.deleteConfig(e.id)})).catch((function(){}))},pageListConfigs:function(e,t){var i=this,n={page:t};e&&(n.name=e),S.config.pageQueryConfig(n).then((function(e){1===e.code?(i.pager.pageSize=e.data.limit,i.pager.page=e.data.page,i.pager.total=e.data.total,i.configs=e.data.records):i.$message.error(e.message)}))},deleteConfig:function(e){var t=this;S.config.deleteConfig(e).then((function(e){1===e.code?t.pageListConfigs(null,1):t.$message.error(e.message)}))}}},w=k,T=i("2877"),x=Object(T["a"])(w,s,l,!1,null,null,null),C=x.exports,N=function(){var e=this,t=e.$createElement,i=e._self._c||t;return i("el-container",{staticClass:"global-container"},[i("el-row",[i("el-col",{attrs:{span:12}},[i("span",{staticClass:"back-menu",on:{click:function(t){return e.$router.replace("/")}}},[i("i",{staticClass:"el-icon-arrow-left"}),i("span",[e._v("新增配置")])])]),i("el-col",{staticStyle:{"text-align":"right"},attrs:{span:12}},[i("el-button",{attrs:{type:"primary",size:"mini"},on:{click:e.handleSave}},[e._v("保存")])],1)],1),i("el-row",{staticStyle:{flex:"1"}},[i("div",{staticStyle:{display:"inline-block",width:"100%"}},[i("el-form",{attrs:{inline:!0,model:e.agentNameForm}},[i("el-form-item",{attrs:{label:"Agent Name",prop:"agentName",rules:e.rules.agentName}},[i("el-input",{attrs:{size:"small"},model:{value:e.agentNameForm.agentName,callback:function(t){e.$set(e.agentNameForm,"agentName",t)},expression:"agentNameForm.agentName"}})],1)],1)],1),i("el-tabs",{model:{value:e.activeTab,callback:function(t){e.activeTab=t},expression:"activeTab"}},[i("el-tab-pane",{attrs:{label:"Channels",name:"Channels"}},[i("div",[i("el-row",[i("el-button",{attrs:{type:"primary",size:"mini"},on:{click:function(t){return e.handleChannelsAdd(1)}}},[e._v("加一个")])],1),i("el-row",[i("el-form",{attrs:{inline:!0,model:e.channelForm}},[e.channelForm.channels&&e.channelForm.channels.length>0?i("el-collapse",{attrs:{accordion:""},on:{change:e.handleChannelsCollapseChange},model:{value:e.channelsActiveCollapse,callback:function(t){e.channelsActiveCollapse=t},expression:"channelsActiveCollapse"}},e._l(e.channelForm.channels,(function(t,n){return i("el-collapse-item",{key:n,attrs:{name:n}},[i("template",{slot:"title"},[e._v(" "+e._s(t.name)+" ["+e._s(t.type)+"] "),i("el-link",{staticStyle:{"margin-left":"10px"},attrs:{underline:!1,type:"danger"},on:{click:function(t){return e.handleItemDelete(1,n,t)}}},[e._v("删除")])],1),i("el-form-item",{attrs:{label:"名称",prop:"channels."+n+".name",rules:e.rules.requiredInput}},[i("el-input",{attrs:{placeholder:"必填",size:"small"},model:{value:t.name,callback:function(i){e.$set(t,"name",i)},expression:"item.name"}})],1),i("el-form-item",{attrs:{label:"类型",prop:"channels."+n+".name",rules:e.rules.requiredSelect}},[i("el-select",{attrs:{placeholder:"请选择",size:"small"},model:{value:t.type,callback:function(i){e.$set(t,"type",i)},expression:"item.type"}},e._l(e.channelTypes,(function(e){return i("el-option",{key:e,attrs:{label:e,value:e}})})),1)],1),i("br"),t.type?i("config-form-items",{ref:"channel-"+n,refInFor:!0,attrs:{type:"channel",properties:e.Channels[t.type],data:e.channelForm.channels[n]}}):e._e()],2)})),1):e._e()],1)],1)],1)]),i("el-tab-pane",{attrs:{label:"Sources",name:"Sources"}},[i("el-row",[i("el-button",{attrs:{type:"primary",size:"mini"},on:{click:function(t){return e.handleChannelsAdd(2)}}},[e._v("加一个")])],1),i("el-row",[i("el-form",{attrs:{inline:!0}},[e.sources&&e.sources.length>0?i("el-collapse",{attrs:{accordion:""},on:{change:e.handleSourcesCollapseChange},model:{value:e.sourcesActiveCollapse,callback:function(t){e.sourcesActiveCollapse=t},expression:"sourcesActiveCollapse"}},e._l(e.sources,(function(t,n){return i("el-collapse-item",{key:n,attrs:{name:n}},[i("template",{slot:"title"},[e._v(" "+e._s(t.name)+" ["+e._s(t.type)+"] "),i("el-link",{staticStyle:{"margin-left":"10px"},attrs:{underline:!1,type:"danger"},on:{click:function(t){return e.handleItemDelete(2,n,t)}}},[e._v("删除")])],1),i("el-form-item",{attrs:{label:"名称",required:""}},[i("el-input",{attrs:{placeholder:"必填",size:"small"},model:{value:t.name,callback:function(i){e.$set(t,"name",i)},expression:"item.name"}})],1),i("el-form-item",{attrs:{label:"类型",required:""}},[i("el-select",{attrs:{placeholder:"请选择",size:"small"},model:{value:t.type,callback:function(i){e.$set(t,"type",i)},expression:"item.type"}},e._l(e.sourceTypes,(function(e){return i("el-option",{key:e,attrs:{label:e,value:e}})})),1)],1),i("el-form-item",{attrs:{label:"Channels",required:""}},[i("el-select",{attrs:{placeholder:"请选择",size:"small",multiple:""},model:{value:t.channels,callback:function(i){e.$set(t,"channels",i)},expression:"item.channels"}},e._l(e.channelForm.channels,(function(e){return i("el-option",{key:e.name,attrs:{label:e.name,value:e.name}})})),1)],1),i("br"),t.type?i("config-form-items",{ref:"source-"+n,refInFor:!0,attrs:{type:"source",properties:e.Sources[t.type],data:e.sources[n]}}):e._e()],2)})),1):e._e()],1)],1)],1),i("el-tab-pane",{attrs:{label:"Sinks",name:"Sinks"}},[i("el-row",[i("el-button",{attrs:{type:"primary",size:"mini"},on:{click:function(t){return e.handleChannelsAdd(3)}}},[e._v("加一个")])],1),i("el-row",[i("el-form",{attrs:{inline:!0}},[e.sinks&&e.sinks.length>0?i("el-collapse",{attrs:{accordion:""},on:{change:e.handleSinksCollapseChange},model:{value:e.sinksActiveCollapse,callback:function(t){e.sinksActiveCollapse=t},expression:"sinksActiveCollapse"}},e._l(e.sinks,(function(t,n){return i("el-collapse-item",{key:n,attrs:{name:n}},[i("template",{slot:"title"},[e._v(" "+e._s(t.name)+" ["+e._s(t.type)+"] "),i("el-link",{staticStyle:{"margin-left":"10px"},attrs:{underline:!1,type:"danger"},on:{click:function(t){return e.handleItemDelete(3,n,t)}}},[e._v("删除")])],1),i("el-form-item",{attrs:{label:"名称",required:""}},[i("el-input",{attrs:{placeholder:"必填",size:"small"},model:{value:t.name,callback:function(i){e.$set(t,"name",i)},expression:"item.name"}})],1),i("el-form-item",{attrs:{label:"类型",required:""}},[i("el-select",{attrs:{placeholder:"请选择",size:"small"},model:{value:t.type,callback:function(i){e.$set(t,"type",i)},expression:"item.type"}},e._l(e.sinkTypes,(function(e){return i("el-option",{key:e,attrs:{label:e,value:e}})})),1)],1),i("el-form-item",{attrs:{label:"Channel",required:""}},[i("el-select",{attrs:{placeholder:"请选择",size:"small"},model:{value:t.channel,callback:function(i){e.$set(t,"channel",i)},expression:"item.channel"}},e._l(e.channelForm.channels,(function(e){return i("el-option",{key:e.name,attrs:{label:e.name,value:e.name}})})),1)],1),i("br"),t.type?i("config-form-items",{ref:"sink-"+n,refInFor:!0,attrs:{type:"sink",properties:e.Sinks[t.type],data:e.sinks[n]}}):e._e()],2)})),1):e._e()],1)],1)],1)],1)],1)],1)},I=[],A=(i("a434"),i("b64b"),i("ac1f"),i("5319"),i("2ca0"),i("a9e3"),i("5530")),D={Select:"Select"},z={"selector.type":{type:D.Select,select:["replicating","multiplexing"],default:"replicating",description:"replicating or multiplexing"},"selector.*":{type:Object,default:{},description:"Depends on the selector.type value"},interceptors:{type:Array,default:[],separator:" ",description:"list of interceptors"},"interceptors.*":{type:Object,default:{},description:"interceptors parameters"}},O={ssl:{type:Boolean,default:!1,description:"Set this to true to enable SSL encryption. If SSL is enabled, you must also specify a “keystore” and a “keystore-password”, either through component level parameters (see below) or as global SSL parameters"},keystore:{type:String,default:"",description:"This is the path to a Java keystore file. If not specified here, then the global keystore will be used (if defined, otherwise configuration error)"},"keystore-password":{type:String,default:"",description:"The password for the Java keystore. If not specified here, then the global keystore password will be used (if defined, otherwise configuration error)"},"keystore-type":{type:D.Select,default:"JKS",select:["JKS","PKCS12"],description:"The type of the Java keystore. This can be “JKS” or “PKCS12”. If not specified here, then the global keystore type will be used (if defined, otherwise the default is JKS)"},"exclude-protocols":{type:Array,default:["SSLv3"],separator:" ",description:"list of SSL/TLS protocols to exclude. SSLv3 will always be excluded in addition to the protocols specified"},"include-protocols":{type:Array,default:[],separator:" ",description:"list of SSL/TLS protocols to include. The enabled protocols will be the included protocols without the excluded protocols. If included-protocols is empty, it includes every supported protocols"},"exclude-cipher-suites":{type:Array,default:[],separator:" ",description:"list of cipher suites to exclude"},"include-cipher-suites":{type:Array,default:[],separator:" ",description:"list of cipher suites to include. The enabled cipher suites will be the included cipher suites without the excluded cipher suites. If included-cipher-suites is empty, it includes every supported cipher suites"}},P=Object(A["a"])(Object(A["a"])({bind:{type:String,default:"",required:!0,description:"hostname or IP address to listen on"},port:{type:Number,default:0,required:!0,min:0,max:65535,description:"Port # to bind to"},threads:{type:Number,default:1,description:"Maximum number of worker threads to spawn"},"compression-type":{type:String,default:"none",description:"This can be “none” or “deflate”. The compression-type must match the compression-type of matching AvroSource"}},O),{},{ipFilter:{type:Boolean,default:!1,description:"Set this to true to enable ipFiltering for netty"},ipFilterRules:{type:"StringArray",selectPrepend:["allow:ip","allow:name","deny:ip","deny:name"],default:[],description:"Define N netty ipFilter pattern rules with this config"}},z),_=Object(A["a"])({bind:{type:String,default:"",required:!0,description:"hostname or IP address to listen on"},port:{type:Number,default:0,required:!0,min:0,max:65535,description:"Port # to bind to"},kerberos:{type:Boolean,default:!1,description:"Set to true to enable kerberos authentication. In kerberos mode, agent-principal and agent-keytab are required for successful authentication. The Thrift source in secure mode, will accept connections only from Thrift clients that have kerberos enabled and are successfully authenticated to the kerberos KDC"},"agent-principal":{type:String,default:"",description:"The kerberos principal used by the Thrift Source to authenticate to the kerberos KDC"},"agent-keytab":{type:String,default:"",description:"The keytab location used by the Thrift Source in combination with the agent-principal to authenticate to the kerberos KDC"}},z),L=Object(A["a"])({command:{type:String,default:"",required:!0,description:"The command to execute"},shell:{type:String,default:"",description:"A shell invocation used to run the command. e.g. /bin/sh -c. Required only for commands relying on shell features like wildcards, back ticks, pipes etc"},restartThrottle:{type:Number,default:1e4,description:"Amount of time (in millis) to wait before attempting a restart"},restart:{type:Boolean,default:!1,description:"Whether the executed cmd should be restarted if it dies"},logStdErr:{type:Boolean,default:!1,description:"Whether the command’s stderr should be logged"},batchSize:{type:Number,default:20,description:"The max number of lines to read and send to the channel at a time"},batchTimeout:{type:Number,default:3e3,description:"Amount of time (in milliseconds) to wait, if the buffer size was not reached, before data is pushed downstream"}},z),F=Object(A["a"])({initialContextFactory:{type:String,default:"",required:!0,description:"Inital Context Factory, e.g: org.apache.activemq.jndi.ActiveMQInitialContextFactory"},connectionFactory:{type:String,default:"",required:!0,description:"The JNDI name the connection factory should appear as"},providerURL:{type:String,default:"",required:!0,description:"The JMS provider URL"},destinationName:{type:String,default:"",required:!0,description:"Destination name"},destinationType:{type:String,select:["queue","topic"],default:"",description:"Destination type (queue or topic)"},messageSelector:{type:String,default:"",description:"Message selector to use when creating the consumer"},userName:{type:String,default:"",description:"Username for the destination/provider"},passwordFile:{type:String,default:"",description:"File containing the password for the destination/provider"},batchSize:{type:Number,default:100,min:1,description:"Number of messages to consume in one batch"},"converter.type":{type:String,default:"DEFAULT",description:"Class to use to convert messages to flume events. BytesMessage: Bytes of message are copied to body of the FlumeEvent. Cannot convert more than 2GB of data per message; TextMessage: Text of message is converted to a byte array and copied to the body of the FlumeEvent. The default converter uses UTF-8 by default but this is configurable; ObjectMessage: Object is written out to a ByteArrayOutputStream wrapped in an ObjectOutputStream and the resulting array is copied to the body of the FlumeEvent"},"converter.*":{type:Object,default:{},description:"Converter properties"},"converter.charset":{type:String,default:"UTF-8",description:"Default converter only. Charset to use when converting JMS TextMessages to byte arrays"},createDurableSubscription:{type:Boolean,default:!1,description:"Whether to create durable subscription. Durable subscription can only be used with destinationType topic. If true, “clientId” and “durableSubscriptionName” have to be specified"},clientId:{type:String,default:"",description:"JMS client identifier set on Connection right after it is created. Required for durable subscriptions"},durableSubscriptionName:{type:String,default:"",description:"Name used to identify the durable subscription. Required for durable subscriptions"}},z),q=Object(A["a"])({spoolDir:{type:String,default:"",required:!0,description:"The directory from which to read files from"},fileSuffix:{type:String,default:".COMPLETED",description:"Suffix to append to completely ingested files"},deletePolicy:{type:D.Select,select:["never","immediate"],default:"never",description:"When to delete completed files: never or immediate"},fileHeader:{type:Boolean,default:!1,description:"Whether to add a header storing the absolute path filename"},fileHeaderKey:{type:String,default:"file",description:"Header key to use when appending absolute path filename to event header"},basenameHeader:{type:Boolean,default:!1,description:"Whether to add a header storing the basename of the file"},basenameHeaderKey:{type:String,default:"basename",description:"Header Key to use when appending basename of file to event header"},includePattern:{type:String,default:"^.*$",description:"Regular expression specifying which files to include. It can used together with ignorePattern. If a file matches both ignorePattern and includePattern regex, the file is ignored"},ignorePattern:{type:String,default:"^$",description:"Regular expression specifying which files to ignore (skip). It can used together with includePattern. If a file matches both ignorePattern and includePattern regex, the file is ignored."},trackerDir:{type:String,default:".flumespool",description:"Directory to store metadata related to processing of files. If this path is not an absolute path, then it is interpreted as relative to the spoolDir"},trackingPolicy:{type:D.Select,select:["rename","tracker_dir"],default:"rename",description:"The tracking policy defines how file processing is tracked. It can be “rename” or “tracker_dir”. This parameter is only effective if the deletePolicy is “never”. “rename” - After processing files they get renamed according to the fileSuffix parameter. “tracker_dir” - Files are not renamed but a new empty file is created in the trackerDir. The new tracker file name is derived from the ingested one plus the fileSuffix"},consumeOrder:{type:D.Select,select:["oldest","youngest","random"],default:"oldest",description:"In which order files in the spooling directory will be consumed oldest, youngest and random. In case of oldest and youngest, the last modified time of the files will be used to compare the files. In case of a tie, the file with smallest lexicographical order will be consumed first. In case of random any file will be picked randomly. When using oldest and youngest the whole directory will be scanned to pick the oldest/youngest file, which might be slow if there are a large number of files, while using random may cause old files to be consumed very late if new files keep coming in the spooling directory"},pollDelay:{type:Number,default:500,min:0,description:"Delay (in milliseconds) used when polling for new files"},recursiveDirectorySearch:{type:Boolean,default:!1,description:"Whether to monitor sub directories for new files to read"},maxBackoff:{type:Number,default:4e3,min:0,description:"The maximum time (in millis) to wait between consecutive attempts to write to the channel(s) if the channel is full. The source will start at a low backoff and increase it exponentially each time the channel throws a ChannelException, upto the value specified by this parameter"},batchSize:{type:Number,default:100,min:0,description:"Granularity at which to batch transfer to the channel"},inputCharset:{type:String,default:"UTF-8",description:"Character set used by deserializers that treat the input file as text"},decodeErrorPolicy:{type:D.Select,select:["FAIL","REPLACE","IGNORE"],default:"FAIL",description:"What to do when we see a non-decodable character in the input file. FAIL: Throw an exception and fail to parse the file. REPLACE: Replace the unparseable character with the “replacement character” char, typically Unicode U+FFFD. IGNORE: Drop the unparseable character sequence"},deserializer:{type:String,default:"LINE",description:"Specify the deserializer used to parse the file into events. Defaults to parsing each line as an event. The class specified must implement EventDeserializer.Builder"},"deserializer.*":{type:Object,default:{},description:"Varies per event deserializer"},bufferMaxLineLength:{type:Number,default:5e3,description:"(Deprecated) Maximum length of a line in the commit buffer. Use deserializer.maxLineLength instead"}},z);i("25f0");function E(e){return Object.prototype.toString.call(e)}var j={deleteKey:function(e,t){if("name"!==e&&!(void 0===t||null===t||""===t||Array.isArray(t)&&0===t.length))return t},isArray:function(e){return"[object Array]"===E(e)},isBoolean:function(e){return"[object Boolean]"===E(e)},isString:function(e){return"[object String]"===E(e)},isObject:function(e){return"[object Object]"===E(e)},selectAll:function(e){if(document.selection){var t=document.body.createTextRange();t.moveToElementText(e),t.select()}else if(window.selection){var i=document.createRange();i.selectNodeContents(e),window.getSelection().removeAllRanges(),window.getSelection().addRange(i)}},LONG_MAX_VALUE:0x8000000000000000},B=Object(A["a"])({filegroups:{type:Array,default:[],separator:" ",required:!0,description:"Each file group indicates a set of files to be tailed"},"filegroups.*":{type:Object,default:{},description:"filegroups.<filegroupName>. Absolute path of the file group. Regular expression (and not file system patterns) can be used for filename only"},positionFile:{type:String,default:"~/.flume/taildir_position.json",description:"File in JSON format to record the inode, the absolute path and the last position of each tailing file"},"headers.*":{type:Object,default:{},description:"headers.<filegroupName>.<headerKey>. Header value which is the set with header key. Multiple headers can be specified for one file group"},byteOffsetHeader:{type:Boolean,default:!1,description:"Whether to add the byte offset of a tailed line to a header called ‘byteoffset’"},skipToEnd:{type:Boolean,default:!1,description:"Whether to skip the position to EOF in the case of files not written on the position file"},idleTimeout:{type:Number,default:12e4,min:0,description:"Time (ms) to close inactive files. If the closed file is appended new lines to, this source will automatically re-open it"},writePosInterval:{type:Number,default:3e3,min:0,description:"Interval time (ms) to write the last position of each file on the position file"},batchSize:{type:Number,default:100,min:0,description:"Max number of lines to read and send to the channel at a time. Using the default is usually fine"},maxBatchCount:{type:Number,default:j.LONG_MAX_VALUE,min:0,description:"Controls the number of batches being read consecutively from the same file. If the source is tailing multiple files and one of them is written at a fast rate, it can prevent other files to be processed, because the busy file would be read in an endless loop. In this case lower this value"},backoffSleepIncrement:{type:Number,default:1e3,min:0,description:"The increment for time delay before reattempting to poll for new data, when the last attempt did not find any new data"},maxBackoffSleep:{type:Number,default:5e3,min:0,description:"The max time delay between each reattempt to poll for new data, when the last attempt did not find any new data"},cachePatternMatching:{type:Boolean,default:!0,description:"Listing directories and applying the filename regex pattern may be time consuming for directories containing thousands of files. Caching the list of matching files can improve performance. The order in which files are consumed will also be cached. Requires that the file system keeps track of modification times with at least a 1-second granularity"},fileHeader:{type:Boolean,default:!1,description:"Whether to add a header storing the absolute path filename"},fileHeaderKey:{type:String,default:"file",description:"Header key to use when appending absolute path filename to event header"}},z),H=Object(A["a"])({consumerKey:{type:String,default:"",required:!0,description:"OAuth consumer key"},consumerSecret:{type:String,default:"",required:!0,description:"OAuth consumer secret"},accessToken:{type:String,default:"",required:!0,description:"OAuth access token"},accessTokenSecret:{type:String,default:"",required:!0,description:"OAuth token secret"},maxBatchSize:{type:Number,default:1e3,min:0,description:"Maximum number of twitter messages to put in a single batch"},maxBatchDurationMillis:{type:Number,default:1e3,min:0,description:"Maximum number of milliseconds to wait before closing a batch"}},z),$=Object(A["a"])({"kafka.bootstrap.servers":{type:Array,default:[],required:!0,description:"List of brokers in the Kafka cluster used by the source"},"kafka.topics":{type:Array,default:[],required:!0,description:"list of topics the kafka consumer will read messages from"},"kafka.topics.regex":{type:String,default:"",required:!0,description:"Regex that defines set of topics the source is subscribed on. This property has higher priority than kafka.topics and overrides kafka.topics if exists"},"kafka.consumer.group.id":{type:String,default:"flume",description:"Unique identified of consumer group. Setting the same id in multiple sources or agents indicates that they are part of the same consumer group"},batchSize:{type:Number,default:1e3,min:0,description:"Maximum number of messages written to Channel in one batch"},batchDurationMillis:{type:Number,default:1e3,min:0,description:"Maximum time (in ms) before a batch will be written to Channel The batch will be written whenever the first of size and time will be reached"},backoffSleepIncrement:{type:Number,default:1e3,min:0,description:"Initial and incremental wait time that is triggered when a Kafka Topic appears to be empty. Wait period will reduce aggressive pinging of an empty Kafka Topic. One second is ideal for ingestion use cases but a lower value may be required for low latency operations with interceptors"},maxBackoffSleep:{type:Number,default:5e3,min:0,description:"Maximum wait time that is triggered when a Kafka Topic appears to be empty. Five seconds is ideal for ingestion use cases but a lower value may be required for low latency operations with interceptors"},useFlumeEventFormat:{type:Boolean,default:!1,description:"By default events are taken as bytes from the Kafka topic directly into the event body. Set to true to read events as the Flume Avro binary format. Used in conjunction with the same property on the KafkaSink or with the parseAsFlumeEvent property on the Kafka Channel this will preserve any Flume headers sent on the producing side"},setTopicHeader:{type:Boolean,default:!0,description:"When set to true, stores the topic of the retrieved message into a header, defined by the topicHeader property"},topicHeader:{type:String,default:"topic",description:"Defines the name of the header in which to store the name of the topic the message was received from, if the setTopicHeader property is set to true. Care should be taken if combining with the Kafka Sink topicHeader property so as to avoid sending the message back to the same topic in a loop"},"kafka.consumer.security.protocol":{type:D.Select,select:["PLAINTEXT","SASL_PLAINTEXT","SASL_SSL","SSL"],default:"PLAINTEXT",description:"Set to SASL_PLAINTEXT, SASL_SSL or SSL if writing to Kafka using some level of security. See below for additional info on secure setup"},"kafka.consumer.*":{type:Object,default:{},description:"These properties are used to configure the Kafka Consumer. Any consumer property supported by Kafka can be used. The only requirement is to prepend the property name with the prefix kafka.consumer. For example: kafka.consumer.auto.offset.reset"}},z),M=Object(A["a"])({bind:{type:String,default:"",required:!0,description:"Host name or IP address to bind to"},port:{type:Number,default:1,min:1,max:65535,description:"Port # to bind to"},"max-line-length":{type:Number,default:512,min:0,description:"Max line length per event body (in bytes)"},"ack-every-event":{type:Boolean,default:!0,description:"Respond with an “OK” for every event received"}},z),K=Object(A["a"])({bind:{type:String,default:"",required:!0,description:"Host name or IP address to bind to"},port:{type:Number,default:1,min:1,max:65535,description:"Port # to bind to"},remoteAddressHeader:{type:String,default:"",description:""}},z),R=Object(A["a"])({batchSize:{type:Number,default:1,description:"Number of events to attempt to process per request loop"},totalEvents:{type:Number,default:j.LONG_MAX_VALUE,description:"Number of unique events sent by the source"}},z),J=Object(A["a"])(Object(A["a"])({host:{type:String,default:"",required:!0,description:"Host name or IP address to bind to"},port:{type:Number,default:1,min:1,max:65535,required:!0,description:"Port # to bind to"},eventSize:{type:Number,default:2500,min:0,description:"Maximum size of a single event line, in bytes"},keepFields:{type:String,default:"none",description:"Setting this to ‘all’ will preserve the Priority, Timestamp and Hostname in the body of the event. A spaced separated list of fields to include is allowed as well. Currently, the following fields can be included: priority, version, timestamp, hostname. The values ‘true’ and ‘false’ have been deprecated in favor of ‘all’ and ‘none’"},clientIPHeader:{type:String,default:"",description:"If specified, the IP address of the client will be stored in the header of each event using the header name specified here. This allows for interceptors and channel selectors to customize routing logic based on the IP address of the client. Do not use the standard Syslog header names here (like _host_) because the event header will be overridden in that case"},clientHostnameHeader:{type:String,default:"",description:"If specified, the host name of the client will be stored in the header of each event using the header name specified here. This allows for interceptors and channel selectors to customize routing logic based on the host name of the client. Retrieving the host name may involve a name service reverse lookup which may affect the performance. Do not use the standard Syslog header names here (like _host_) because the event header will be overridden in that case"}},O),z),U=Object(A["a"])(Object(A["a"])({host:{type:String,default:"",required:!0,description:"Host name or IP address to bind to"},ports:{type:Array,default:[],required:!0,separator:" ",description:"list (one or more) of ports to bind to"},eventSize:{type:Number,default:2500,min:0,description:"Maximum size of a single event line, in bytes"},keepFields:{type:String,default:"none",description:"Setting this to ‘all’ will preserve the Priority, Timestamp and Hostname in the body of the event. A spaced separated list of fields to include is allowed as well. Currently, the following fields can be included: priority, version, timestamp, hostname. The values ‘true’ and ‘false’ have been deprecated in favor of ‘all’ and ‘none’"},portHeader:{type:String,default:"",description:"If specified, the port number will be stored in the header of each event using the header name specified here. This allows for interceptors and channel selectors to customize routing logic based on the incoming port"},clientIPHeader:{type:String,default:"",description:"If specified, the IP address of the client will be stored in the header of each event using the header name specified here. This allows for interceptors and channel selectors to customize routing logic based on the IP address of the client. Do not use the standard Syslog header names here (like _host_) because the event header will be overridden in that case"},clientHostnameHeader:{type:String,default:"",description:"If specified, the host name of the client will be stored in the header of each event using the header name specified here. This allows for interceptors and channel selectors to customize routing logic based on the host name of the client. Retrieving the host name may involve a name service reverse lookup which may affect the performance. Do not use the standard Syslog header names here (like _host_) because the event header will be overridden in that case"},"charset.default":{type:String,default:"UTF-8",description:"Default character set used while parsing syslog events into strings"},"charset.port.*":{type:Object,default:{},description:"charset.port.<port>. Character set is configurable on a per-port basis"},batchSize:{type:Number,default:100,min:0,description:"Maximum number of events to attempt to process per request loop. Using the default is usually fine"},readBufferSize:{type:Number,default:1024,min:0,description:"Size of the internal Mina read buffer. Provided for performance tuning. Using the default is usually fine"},numProcessors:{type:Number,min:0,description:"Number of processors available on the system for use while processing messages. Default is to auto-detect # of CPUs using the Java Runtime API. Mina will spawn 2 request-processing threads per detected CPU, which is often reasonable"}},O),z),W=Object(A["a"])({host:{type:String,default:"",required:!0,description:"Host name or IP address to bind to"},port:{type:Number,default:1,min:1,max:65535,required:!0,description:"Port # to bind to"},keepFields:{type:String,default:"none",description:"Setting this to ‘all’ will preserve the Priority, Timestamp and Hostname in the body of the event. A spaced separated list of fields to include is allowed as well. Currently, the following fields can be included: priority, version, timestamp, hostname. The values ‘true’ and ‘false’ have been deprecated in favor of ‘all’ and ‘none’"},clientIPHeader:{type:String,default:"",description:"If specified, the IP address of the client will be stored in the header of each event using the header name specified here. This allows for interceptors and channel selectors to customize routing logic based on the IP address of the client. Do not use the standard Syslog header names here (like _host_) because the event header will be overridden in that case"},clientHostnameHeader:{type:String,default:"",description:"If specified, the host name of the client will be stored in the header of each event using the header name specified here. This allows for interceptors and channel selectors to customize routing logic based on the host name of the client. Retrieving the host name may involve a name service reverse lookup which may affect the performance. Do not use the standard Syslog header names here (like _host_) because the event header will be overridden in that case"}},z),X=Object(A["a"])(Object(A["a"])({port:{type:Number,default:1,min:1,max:65535,required:!0,description:"Port # to bind to"},bind:{type:String,default:"0.0.0.0",description:"The hostname or IP address to listen on"},handler:{type:String,default:"org.apache.flume.source.http.JSONHandler",description:"The FQCN of the handler class"},"handler.*":{type:Object,default:{},description:"Config parameters for the handler"},"QueuedThreadPool.*":{type:Object,default:{},description:"Jetty specific settings to be set on org.eclipse.jetty.util.thread.QueuedThreadPool. N.B. QueuedThreadPool will only be used if at least one property of this class is set"},"HttpConfiguration.*":{type:Object,default:{},description:"etty specific settings to be set on org.eclipse.jetty.server.HttpConfiguration"},"SslContextFactory.*":{type:Object,default:{},description:"Jetty specific settings to be set on org.eclipse.jetty.util.ssl.SslContextFactory (only applicable when ssl is set to true)"},"ServerConnector.*":{type:Object,default:{},description:"Jetty specific settings to be set on org.eclipse.jetty.server.ServerConnector"}},O),z),V=Object(A["a"])({size:{type:Number,default:500,min:0,description:"Payload size of each Event. Unit:byte"},maxTotalEvents:{type:Number,default:-1,min:-1,description:"Maximum number of Events to be sent"},maxSuccessfulEvents:{type:Number,default:-1,min:-1,description:"Maximum number of Events successfully sent"},batchSize:{type:Number,default:1,min:1,description:"Number of Events to be sent in one batch"},maxEventsPerSecond:{type:Number,default:0,min:0,description:"When set to an integer greater than zero, enforces a rate limiter onto the source"}},z),Q=Object(A["a"])({host:{type:String,default:"",required:!0,description:"Host name or IP address to bind to"},port:{type:Number,default:1,min:1,max:65535,required:!0,description:"Port # to bind to"}},z),G=Object(A["a"])({},Q),Z=Object(A["a"])({port:{type:Number,default:1499,min:1,max:65535,description:"Port that Scribe should be connected"},maxReadBufferBytes:{type:Number,default:16384e3,description:"Thrift Default FrameBuffer Size"},workerThreads:{type:Number,default:5,description:"Handing threads number in Thrift"}},z),Y={avro:P,thrift:_,exec:L,jms:F,spooldir:q,TAILDIR:B,netcat:M,netcatudp:K,seq:R,syslogtcp:J,multiport_syslogtcp:U,syslogudp:W,http:X,"org.apache.flume.source.kafka.KafkaSource":$,"org.apache.flume.source.twitter.TwitterSource":H,"org.apache.flume.source.StressSource":V,"org.apache.flume.source.avroLegacy.AvroLegacySource":Q,"org.apache.flume.source.thriftLegacy.ThriftLegacySource":G,"org.apache.flume.source.scribe.ScribeSource":Z},ee={capacity:{type:Number,default:100,description:"The maximum number of events stored in the channel"},transactionCapacity:{type:Number,default:100,description:"The maximum number of events the channel will take from a source or give to a sink per transaction"},"keep-alive":{type:Number,default:3,description:"Timeout in seconds for adding or removing an event"},byteCapacityBufferPercentage:{type:Number,default:20,min:0,max:100,description:"Defines the percent of buffer between byteCapacity and the estimated total size of all events in the channel, to account for data in headers"},byteCapacity:{type:Number,description:"Maximum total bytes of memory allowed as a sum of all events in this channel. The implementation only counts the Event body, which is the reason for providing the byteCapacityBufferPercentage configuration parameter as well. Defaults to a computed value equal to 80% of the maximum memory available to the JVM (i.e. 80% of the -Xmx value passed on the command line). Note that if you have multiple memory channels on a single JVM, and they happen to hold the same physical events (i.e. if you are using a replicating channel selector from a single source) then those event sizes may be double-counted for channel byteCapacity purposes. Setting this value to 0 will cause this value to fall back to a hard internal limit of about 200 GB"}},te={"db.type":{type:String,default:"DERBY",description:"Database vendor, needs to be DERBY"},"driver.class":{type:String,default:"org.apache.derby.jdbc.EmbeddedDriver",description:"Class for vendor’s JDBC driver"},"driver.url":{type:String,default:"",description:"JDBC connection URL"},"db.username":{type:String,default:"sa",description:"User id for db connection"},"db.password":{type:String,default:"",description:"password for db connection"},"connection.properties.file":{type:String,default:"",description:"JDBC Connection property file path"},"create.schema":{type:Boolean,default:!0,description:"If true, then creates db schema if not there"},"create.index":{type:Boolean,default:!0,description:"Create indexes to speed up lookups"},"create.foreignkey":{type:Boolean,default:!0,description:""},"transaction.isolation":{type:D.Select,select:["READ_UNCOMMITTED","READ_COMMITTED","SERIALIZABLE","REPEATABLE_READ"],default:"READ_COMMITTED",description:"Isolation level for db session READ_UNCOMMITTED, READ_COMMITTED, SERIALIZABLE, REPEATABLE_READ"},"maximum.connections":{type:Number,default:10,min:1,description:"Max connections allowed to db"},"maximum.capacity":{type:Number,default:0,min:0,description:"Max number of events in the channel"},"sysprop.user.home":{type:String,default:"",description:"Home path to store embedded Derby database"},"sysprop.*":{type:Object,default:{},description:"DB Vendor specific properties"}},ie={"kafka.bootstrap.servers":{type:Array,default:[],required:!0,description:"List of brokers in the Kafka cluster used by the channel This can be a partial list of brokers, but we recommend at least two for HA. The format is comma separated list of hostname:port"},"kafka.topic":{type:String,default:"flume-channel",description:"Kafka topic which the channel will use"},"kafka.consumer.group.id":{type:String,default:"flume",description:"Consumer group ID the channel uses to register with Kafka. Multiple channels must use the same topic and group to ensure that when one agent fails another can get the data Note that having non-channel consumers with the same ID can lead to data loss"},parseAsFlumeEvent:{type:Boolean,default:!0,description:"Expecting Avro datums with FlumeEvent schema in the channel. This should be true if Flume source is writing to the channel and false if other producers are writing into the topic that the channel is using. Flume source messages to Kafka can be parsed outside of Flume by using org.apache.flume.source.avro.AvroFlumeEvent provided by the flume-ng-sdk artifact"},pollTimeout:{type:Number,default:500,description:"The amount of time(in milliseconds) to wait in the “poll()” call of the consumer. https://kafka.apache.org/090/javadoc/org/apache/kafka/clients/consumer/KafkaConsumer.html#poll(long)"},defaultPartitionId:{type:String,default:"",description:"Specifies a Kafka partition ID (integer) for all events in this channel to be sent to, unless overriden by partitionIdHeader. By default, if this property is not set, events will be distributed by the Kafka Producer’s partitioner - including by key if specified (or by a partitioner specified by kafka.partitioner.class)"},partitionIdHeader:{type:String,default:"",description:"When set, the producer will take the value of the field named using the value of this property from the event header and send the message to the specified partition of the topic. If the value represents an invalid partition the event will not be accepted into the channel. If the header value is present then this setting overrides defaultPartitionId"},"kafka.consumer.auto.offset.reset":{type:String,default:"latest",description:"What to do when there is no initial offset in Kafka or if the current offset does not exist any more on the server (e.g. because that data has been deleted): earliest: automatically reset the offset to the earliest offset latest: automatically reset the offset to the latest offset none: throw exception to the consumer if no previous offset is found for the consumer’s group anything else: throw exception to the consumer"},"kafka.producer.security.protocol":{type:D.Select,select:["PLAINTEXT","SASL_PLAINTEXT","SASL_SSL","SSL"],default:"PLAINTEXT",description:"Set to SASL_PLAINTEXT, SASL_SSL or SSL if writing to Kafka using some level of security. See below for additional info on secure setup"},"kafka.consumer.security.protocol":{type:D.Select,select:["PLAINTEXT","SASL_PLAINTEXT","SASL_SSL","SSL"],default:"PLAINTEXT",description:"Set to SASL_PLAINTEXT, SASL_SSL or SSL if writing to Kafka using some level of security. See below for additional info on secure setup"},"kafka.producer.*":{type:Object,default:{},description:"If using SASL_PLAINTEXT, SASL_SSL or SSL refer to Kafka security for additional properties that need to be set on producer"},"kafka.consumer.*":{type:Object,default:{},description:"If using SASL_PLAINTEXT, SASL_SSL or SSL refer to Kafka security for additional properties that need to be set on consumer"}},ne={checkpointDir:{type:String,default:"~/.flume/file-channel/checkpoint",description:"The directory where checkpoint file will be stored"},useDualCheckpoints:{type:Boolean,default:!1,description:"Backup the checkpoint. If this is set to true, backupCheckpointDir must be set"},backupCheckpointDir:{type:String,default:"",description:"The directory where the checkpoint is backed up to. This directory must not be the same as the data directories or the checkpoint directory"},dataDirs:{type:Array,default:["~/.flume/file-channel/data"],description:"list of directories for storing log files. Using multiple directories on separate disks can improve file channel peformance"},transactionCapacity:{type:Number,default:1e4,description:"The maximum size of transaction supported by the channel"},checkpointInterval:{type:Number,default:3e4,description:"Amount of time (in millis) between checkpoints"},maxFileSize:{type:Number,default:2146435071,description:"Max size (in bytes) of a single log file"},minimumRequiredSpace:{type:Number,default:524288e3,description:"Minimum Required free space (in bytes). To avoid data corruption, File Channel stops accepting take/put requests when free space drops below this value"},capacity:{type:Number,default:1e6,description:"Maximum capacity of the channel"},"keep-alive":{type:Number,default:3,description:"Amount of time (in sec) to wait for a put operation"},"use-log-replay-v1":{type:Boolean,default:!1,description:"Expert: Use old replay logic"},"use-fast-replay":{type:Boolean,default:!1,description:"Expert: Replay without using queue"},checkpointOnClose:{type:Boolean,default:!0,description:"Controls if a checkpoint is created when the channel is closed. Creating a checkpoint on close speeds up subsequent startup of the file channel by avoiding replay"},"encryption.activeKey":{type:String,default:"",description:"Key name used to encrypt new data"},"encryption.cipherProvider":{type:String,default:"",description:"Cipher provider type, supported types: AESCTRNOPADDING"},"encryption.keyProvider":{type:String,default:"",description:"Key provider type, supported types: JCEKSFILE"},"encryption.keyProvider.keyStoreFile":{type:String,default:"",description:"Path to the keystore file"},"encrpytion.keyProvider.keyStorePasswordFile":{type:String,default:"",description:"Path to the keystore password file"},"encryption.keyProvider.keys":{type:Array,default:[],separator:" ",description:"List of all keys (e.g. history of the activeKey setting)"},"encryption.keyProvider.keys.*":{type:Object,default:{},description:"Path to the optional key password file. eg: key-1.passwordFile=/path/to"}},ae=Object(A["a"])({memoryCapacity:{type:Number,default:1e4,description:"Maximum number of events stored in memory queue. To disable use of in-memory queue, set this to zero"},overflowCapacity:{type:Number,default:1e8,description:"Maximum number of events stored in overflow disk (i.e File channel). To disable use of overflow, set this to zero"},overflowTimeout:{type:Number,default:3,description:"The number of seconds to wait before enabling disk overflow when memory fills up"},byteCapacityBufferPercentage:{type:Number,default:20,description:"Defines the percent of buffer between byteCapacity and the estimated total size of all events in the channel, to account for data in headers. See below"},byteCapacity:{type:Number,description:"Maximum bytes of memory allowed as a sum of all events in the memory queue. The implementation only counts the Event body, which is the reason for providing the byteCapacityBufferPercentage configuration parameter as well. Defaults to a computed value equal to 80% of the maximum memory available to the JVM (i.e. 80% of the -Xmx value passed on the command line). Note that if you have multiple memory channels on a single JVM, and they happen to hold the same physical events (i.e. if you are using a replicating channel selector from a single source) then those event sizes may be double-counted for channel byteCapacity purposes. Setting this value to 0 will cause this value to fall back to a hard internal limit of about 200 GB"},avgEventSize:{type:Number,default:500,description:"Estimated average size of events, in bytes, going into the channel"}},ne),re={capacity:{type:Number,default:50,description:"The max number of events stored in the channel"},"keep-alive":{type:Number,default:3,description:"Timeout in seconds for adding or removing an event"}},oe={memory:ee,jdbc:te,kafka:ie,file:ne,SPILLABLEMEMORY:ae,"org.apache.flume.channel.PseudoTxnMemoryChannel":re},se={"hdfs.path":{type:String,default:"",required:!0,description:"HDFS directory path (eg hdfs://namenode/flume/webdata/)"},"hdfs.filePrefix":{type:String,default:"FlumeData",description:"Name prefixed to files created by Flume in hdfs directory"},"hdfs.fileSuffix":{type:String,default:"",description:"Suffix to append to file (eg .avro - NOTE: period is not automatically added)"},"hdfs.inUsePrefix":{type:String,default:"",description:"Prefix that is used for temporal files that flume actively writes into"},"hdfs.inUseSuffix":{type:String,default:".tmp",description:"Suffix that is used for temporal files that flume actively writes into"},"hdfs.emptyInUseSuffix":{type:Boolean,default:!1,description:"If false an hdfs.inUseSuffix is used while writing the output. After closing the output hdfs.inUseSuffix is removed from the output file name. If true the hdfs.inUseSuffix parameter is ignored an empty string is used instead"},"hdfs.rollInterval":{type:Number,default:30,min:0,description:"Number of seconds to wait before rolling current file (0 = never roll based on time interval)"},"hdfs.rollSize":{type:Number,default:1024,min:0,description:"File size to trigger roll, in bytes (0: never roll based on file size)"},"hdfs.rollCount":{type:Number,default:10,min:0,description:"Number of events written to file before it rolled (0 = never roll based on number of events)"},"hdfs.idleTimeout":{type:Number,default:0,min:0,description:"Timeout after which inactive files get closed (0 = disable automatic closing of idle files)"},"hdfs.batchSize":{type:Number,default:100,min:1,description:"number of events written to file before it is flushed to HDFS"},"hdfs.codeC":{type:D.Select,default:"",select:["gzip","bzip2","lzo","lzop","snappy"],description:"Compression codec. one of following : gzip, bzip2, lzo, lzop, snappy"},"hdfs.fileType":{type:D.Select,select:["SequenceFile","DataStream","CompressedStream"],default:"SequenceFile",description:"File format: currently SequenceFile, DataStream or CompressedStream (1)DataStream will not compress output file and please don’t set codeC (2)CompressedStream requires set hdfs.codeC with an available codeC"},"hdfs.maxOpenFiles":{type:Number,default:5e3,min:0,description:"Allow only this number of open files. If this number is exceeded, the oldest file is closed"},"hdfs.minBlockReplicas":{type:Number,min:0,description:"Specify minimum number of replicas per HDFS block. If not specified, it comes from the default Hadoop config in the classpath"},"hdfs.writeFormat":{type:D.Select,select:["Writable","Text"],default:"Writable",description:"Format for sequence file records. One of Text or Writable. Set to Text before creating data files with Flume, otherwise those files cannot be read by either Apache Impala (incubating) or Apache Hive"},"hdfs.threadsPoolSize":{type:Number,default:10,description:"Number of threads per HDFS sink for HDFS IO ops (open, write, etc.)"},"hdfs.rollTimerPoolSize":{type:Number,default:1,description:"Number of threads per HDFS sink for scheduling timed file rolling"},"hdfs.kerberosPrincipal":{type:String,default:"",description:"Kerberos user principal for accessing secure HDFS"},"hdfs.kerberosKeytab":{type:String,default:"",description:"Kerberos keytab for accessing secure HDFS"},"hdfs.proxyUser":{type:String,default:"",description:""},"hdfs.round":{type:Boolean,default:!1,description:"Should the timestamp be rounded down (if true, affects all time based escape sequences except %t)"},"hdfs.roundValue":{type:Number,default:1,description:"Rounded down to the highest multiple of this (in the unit configured using hdfs.roundUnit), less than current time"},"hdfs.roundUnit":{type:D.Select,select:["second","minute","hour"],default:"second",description:"The unit of the round down value - second, minute or hour"},"hdfs.timeZone":{type:String,default:"Local Time",description:"Name of the timezone that should be used for resolving the directory path, e.g. America/Los_Angeles"},"hdfs.useLocalTimeStamp":{type:Boolean,default:!1,description:"Use the local time (instead of the timestamp from the event header) while replacing the escape sequences"},"hdfs.closeTries":{type:Number,default:0,min:0,description:"Number of times the sink must try renaming a file, after initiating a close attempt. If set to 1, this sink will not re-try a failed rename (due to, for example, NameNode or DataNode failure), and may leave the file in an open state with a .tmp extension. If set to 0, the sink will try to rename the file until the file is eventually renamed (there is no limit on the number of times it would try). The file may still remain open if the close call fails but the data will be intact and in this case, the file will be closed only after a Flume restart"},"hdfs.retryInterval":{type:Number,default:180,min:0,description:"Time in seconds between consecutive attempts to close a file. Each close call costs multiple RPC round-trips to the Namenode, so setting this too low can cause a lot of load on the name node. If set to 0 or less, the sink will not attempt to close the file if the first attempt fails, and may leave the file open or with a ”.tmp” extension"},serializer:{type:String,default:"TEXT",description:"Other possible options include avro_event or the fully-qualified class name of an implementation of the EventSerializer.Builder interface"},"serializer.*":{type:Object,default:{},description:""}},le={"hive.metastore":{type:String,default:"",required:!0,description:"Hive metastore URI (eg thrift://a.b.com:9083 )"},"hive.database":{type:String,default:"",required:!0,description:"Hive database name"},"hive.table":{type:String,default:"",required:!0,description:"Hive table name"},serializer:{type:D.Select,default:"",select:["DELIMITED","JSON"],description:"Serializer is responsible for parsing out field from the event and mapping them to columns in the hive table. Choice of serializer depends upon the format of the data in the event. Supported serializers: DELIMITED and JSON"},"hive.partition":{type:String,default:"",description:"Comma separate list of partition values identifying the partition to write to. May contain escape sequences. E.g: If the table is partitioned by (continent: string, country :string, time : string) then ‘Asia,India,2014-02-26-01-21’ will indicate continent=Asia,country=India,time=2014-02-26-01-21"},"hive.txnsPerBatchAsk":{type:Number,default:100,min:0,description:"Hive grants a batch of transactions instead of single transactions to streaming clients like Flume. This setting configures the number of desired transactions per Transaction Batch. Data from all transactions in a single batch end up in a single file. Flume will write a maximum of batchSize events in each transaction in the batch. This setting in conjunction with batchSize provides control over the size of each file. Note that eventually Hive will transparently compact these files into larger files"},heartBeatInterval:{type:Number,default:240,min:0,description:"(In seconds) Interval between consecutive heartbeats sent to Hive to keep unused transactions from expiring. Set this value to 0 to disable heartbeats"},autoCreatePartitions:{type:Boolean,default:!0,description:"Flume will automatically create the necessary Hive partitions to stream to"},batchSize:{type:Number,default:15e3,min:0,description:"Max number of events written to Hive in a single Hive transaction"},maxOpenConnections:{type:Number,default:500,description:"Allow only this number of open connections. If this number is exceeded, the least recently used connection is closed"},callTimeout:{type:Number,default:1e4,min:0,description:"(In milliseconds) Timeout for Hive & HDFS I/O operations, such as openTxn, write, commit, abort"},roundUnit:{type:D.Select,default:"minute",select:["second","minute","hour"],description:"The unit of the round down value - second, minute or hour"},roundValue:{type:Number,default:1,min:0,description:"Rounded down to the highest multiple of this (in the unit configured using hive.roundUnit), less than current time"},timeZone:{type:String,default:"Local Time",description:"Name of the timezone that should be used for resolving the directory path, e.g. America/Los_Angeles"},useLocalTimeStamp:{type:Boolean,default:!1,description:"Use the local time (instead of the timestamp from the event header) while replacing the escape sequences"}},ce={maxBytesToLog:{type:Number,default:16,description:"Maximum number of bytes of the Event body to log"}},de={hostname:{type:String,default:"",required:!0,description:"The hostname or IP address to bind to"},port:{type:Number,default:0,required:!0,min:0,max:65535,description:"Port # to bind to"},"batch-size":{type:Number,default:100,min:0,description:"number of event to batch together for send"},"connect-timeout":{type:Number,default:2e4,min:0,description:"Amount of time (ms) to allow for the first (handshake) request"},"request-timeout":{type:Number,default:2e4,min:0,description:"Amount of time (ms) to allow for requests after the first"},"reset-connection-interval":{type:String,default:"none",description:"Amount of time (s) before the connection to the next hop is reset. This will force the Avro Sink to reconnect to the next hop. This will allow the sink to connect to hosts behind a hardware load-balancer when news hosts are added without having to restart the agent"},"compression-type":{type:D.Select,default:"none",select:["none","deflate"],description:"This can be “none” or “deflate”. The compression-type must match the compression-type of matching AvroSource"},"compression-leve":{type:D.Select,select:["0","1","2","3","4","5","6","7","8","9"],default:"6",description:"The level of compression to compress event. 0 = no compression and 1-9 is compression. The higher the number the more compression"},ssl:{type:Boolean,default:!1,description:"Set to true to enable SSL for this AvroSink. When configuring SSL, you can optionally set a “truststore”, “truststore-password”, “truststore-type”, and specify whether to “trust-all-certs”"},"trust-all-certs":{type:Boolean,default:!1,description:"If this is set to true, SSL server certificates for remote servers (Avro Sources) will not be checked. This should NOT be used in production because it makes it easier for an attacker to execute a man-in-the-middle attack and “listen in” on the encrypted connection"},truststore:{type:String,default:"",description:"The path to a custom Java truststore file. Flume uses the certificate authority information in this file to determine whether the remote Avro Source’s SSL authentication credentials should be trusted. If not specified, then the global keystore will be used. If the global keystore not specified either, then the default Java JSSE certificate authority files (typically “jssecacerts” or “cacerts” in the Oracle JRE) will be used"},"truststore-password":{type:String,default:"",description:"The password for the truststore. If not specified, then the global keystore password will be used (if defined)"},"truststore-type":{type:String,default:"JKS",description:"The type of the Java truststore. This can be “JKS” or other supported Java truststore type. If not specified, then the global keystore type will be used (if defined, otherwise the defautl is JKS)"},"exclude-protocols":{type:Array,default:["SSLv3"],separator:" ",description:"list of SSL/TLS protocols to exclude. SSLv3 will always be excluded in addition to the protocols specified"},maxIoWorkers:{type:Number,description:"The maximum number of I/O worker threads. This is configured on the NettyAvroRpcClient NioClientSocketChannelFactory"}},ue={bind:{type:String,default:"",required:!0,description:"The hostname or IP address to bind to"},port:{type:Number,default:0,required:!0,min:0,max:65535,description:"The port # to listen on"},"batch-size":{type:Number,default:100,min:0,description:"number of event to batch together for send"},"connect-timeout":{type:Number,default:2e4,min:0,description:"Amount of time (ms) to allow for the first (handshake) request"},"request-timeout":{type:Number,default:2e4,min:0,description:"Amount of time (ms) to allow for requests after the first"},"connection-reset-interval":{type:String,default:"none",description:"Amount of time (s) before the connection to the next hop is reset. This will force the Avro Sink to reconnect to the next hop. This will allow the sink to connect to hosts behind a hardware load-balancer when news hosts are added without having to restart the agent"},ssl:{type:Boolean,default:!1,description:"Set to true to enable SSL for this AvroSink. When configuring SSL, you can optionally set a “truststore”, “truststore-password”, “truststore-type”, and specify whether to “trust-all-certs”"},truststore:{type:String,default:"",description:"The path to a custom Java truststore file. Flume uses the certificate authority information in this file to determine whether the remote Avro Source’s SSL authentication credentials should be trusted. If not specified, then the global keystore will be used. If the global keystore not specified either, then the default Java JSSE certificate authority files (typically “jssecacerts” or “cacerts” in the Oracle JRE) will be used"},"truststore-password":{type:String,default:"",description:"The password for the truststore. If not specified, then the global keystore password will be used (if defined)"},"truststore-type":{type:String,default:"JKS",description:"The type of the Java truststore. This can be “JKS” or other supported Java truststore type. If not specified, then the global keystore type will be used (if defined, otherwise the defautl is JKS)"},"exclude-protocols":{type:Array,default:["SSLv3"],separator:" ",description:"list of SSL/TLS protocols to exclude. SSLv3 will always be excluded in addition to the protocols specified"},kerberos:{type:Boolean,default:!1,description:"Set to true to enable kerberos authentication. In kerberos mode, client-principal, client-keytab and server-principal are required for successful authentication and communication to a kerberos enabled Thrift Source"},"client-principal":{type:String,default:"",description:"The kerberos principal used by the Thrift Sink to authenticate to the kerberos KDC"},"client-keytab":{type:String,default:"",description:"The keytab location used by the Thrift Sink in combination with the client-principal to authenticate to the kerberos KDC"},"server-principal":{type:String,default:"",description:"The kerberos principal of the Thrift Source to which the Thrift Sink is configured to connect to"}},pe={hostname:{type:String,default:"",required:!0,description:"The hostname or IP address to connect to"},port:{type:Number,default:6667,min:0,max:65535,description:"The port number of remote host to connect"},nick:{type:String,default:"",required:!0,description:"Nick name"},user:{type:String,default:"",description:"User name"},password:{type:String,default:"",description:"User password"},chan:{type:String,default:"",required:!0,description:"channel"},name:{type:String,default:"",description:""},splitlines:{type:Boolean,default:!0,description:""},splitchars:{type:String,default:"n",description:"ine separator (if you were to enter the default value into the config file, then you would need to escape the backslash, like this: “\\n”)"}},fe={"sink.directory":{type:String,default:"",required:!0,description:"The directory where files will be stored"},"sink.pathManager":{type:String,default:"DEFAULT",description:"The PathManager implementation to use"},"sink.pathManager.extension":{type:String,default:"",description:"The file extension if the default PathManager is used"},"sink.pathManager.prefix":{type:String,default:"",description:"A character string to add to the beginning of the file name if the default PathManager is used"},"sink.rollInterval":{type:Number,default:30,description:"Roll the file every 30 seconds. Specifying 0 will disable rolling and cause all events to be written to a single file"},"sink.serializer":{type:String,default:"TEXT",description:"Other possible options include avro_event or the FQCN of an implementation of EventSerializer.Builder interface"},"sink.batchSize":{type:Number,default:100,min:0,description:""}},he={table:{type:String,default:"",required:!0,description:"The name of the table in Hbase to write to"},columnFamily:{type:String,default:"",required:!0,description:"The column family in Hbase to write to"},zookeeperQuorum:{type:String,default:"",description:"The quorum spec. This is the value for the property hbase.zookeeper.quorum in hbase-site.xml"},znodeParent:{type:String,default:"/hbase",description:"The base path for the znode for the -ROOT- region. Value of zookeeper.znode.parent in hbase-site.xml"},batchSize:{type:Number,default:100,description:"Number of events to be written per txn"},coalesceIncrements:{type:Boolean,default:!1,description:"Should the sink coalesce multiple increments to a cell per batch. This might give better performance if there are multiple increments to a limited number of cells"},serializer:{type:String,default:"org.apache.flume.sink.hbase.SimpleHbaseEventSerializer",description:"Default increment column = “iCol”, payload column = “pCol”"},"serializer.*":{type:Object,default:{},description:"Properties to be passed to the serializer"},kerberosPrincipal:{type:String,default:"",description:"Kerberos user principal for accessing secure HBase"},kerberosKeytab:{type:String,default:"",description:"Kerberos keytab for accessing secure HBase"}},me={table:{type:String,default:"",required:!0,description:"The name of the table in Hbase to write to"},columnFamily:{type:String,default:"",required:!0,description:"The column family in Hbase to write to"},zookeeperQuorum:{type:String,default:"",description:"The quorum spec. This is the value for the property hbase.zookeeper.quorum in hbase-site.xml"},znodeParent:{type:String,default:"/hbase",description:"The base path for the znode for the -ROOT- region. Value of zookeeper.znode.parent in hbase-site.xml"},batchSize:{type:Number,default:100,description:"Number of events to be written per txn"},coalesceIncrements:{type:Boolean,default:!1,description:"Should the sink coalesce multiple increments to a cell per batch. This might give better performance if there are multiple increments to a limited number of cells"},serializer:{type:String,default:"org.apache.flume.sink.hbase2.SimpleHBase2EventSerializer",description:"Default increment column = “iCol”, payload column = “pCol”"},"serializer.*":{type:Object,default:{},description:"Properties to be passed to the serializer"},kerberosPrincipal:{type:String,default:"",description:"Kerberos user principal for accessing secure HBase"},kerberosKeytab:{type:String,default:"",description:"Kerberos keytab for accessing secure HBase"}},ye={table:{type:String,default:"",required:!0,description:"The name of the table in Hbase to write to"},columnFamily:{type:String,default:"",required:!0,description:"The column family in Hbase to write to"},zookeeperQuorum:{type:String,default:"",description:"The quorum spec. This is the value for the property hbase.zookeeper.quorum in hbase-site.xml"},znodeParent:{type:String,default:"/hbase",description:"The base path for the znode for the -ROOT- region. Value of zookeeper.znode.parent in hbase-site.xml"},batchSize:{type:Number,default:100,description:"Number of events to be written per txn"},coalesceIncrements:{type:Boolean,default:!1,description:"Should the sink coalesce multiple increments to a cell per batch. This might give better performance if there are multiple increments to a limited number of cells"},timeout:{type:Number,default:6e4,min:0,description:"The length of time (in milliseconds) the sink waits for acks from hbase for all events in a transaction"},serializer:{type:String,default:"org.apache.flume.sink.hbase2.SimpleHBase2EventSerializer",description:"Default increment column = “iCol”, payload column = “pCol”"},"serializer.*":{type:Object,default:{},description:"Properties to be passed to the serializer"},"async.*":{type:Object,default:{},description:"Properties to be passed to asyncHbase library. These properties have precedence over the old zookeeperQuorum and znodeParent values"}},ge={morphlineFile:{type:String,default:"",required:!0,description:"The relative or absolute path on the local file system to the morphline configuration file. Example: /etc/flume-ng/conf/morphline.conf"},morphlineId:{type:String,default:"null",description:"Optional name used to identify a morphline if there are multiple morphlines in a morphline config file"},batchSize:{type:Number,default:1e3,min:0,description:"The maximum number of events to take per flume transaction"},batchDurationMillis:{type:Number,default:1e3,min:0,description:"The maximum duration per flume transaction (ms). The transaction commits after this duration or when batchSize is exceeded, whichever comes first"},handlerClass:{type:String,default:"org.apache.flume.sink.solr.morphline.MorphlineHandlerImpl",description:"The FQCN of a class implementing org.apache.flume.sink.solr.morphline.MorphlineHandler"},isProductionMode:{type:Boolean,default:!1,description:"This flag should be enabled for mission critical, large-scale online production systems that need to make progress without downtime when unrecoverable exceptions occur. Corrupt or malformed parser input data, parser bugs, and errors related to unknown Solr schema fields produce unrecoverable exceptions"},recoverableExceptionClasses:{type:String,default:"org.apache.solr.client.solrj.SolrServerException",description:"Comma separated list of recoverable exceptions that tend to be transient, in which case the corresponding task can be retried. Examples include network connection errors, timeouts, etc. When the production mode flag is set to true, the recoverable exceptions configured using this parameter will not be ignored and hence will lead to retries"},isIgnoringRecoverableExceptions:{type:Boolean,default:!1,description:"This flag should be enabled, if an unrecoverable exception is accidentally misclassified as recoverable. This enables the sink to make progress and avoid retrying an event forever"}},be={hostNames:{type:Array,required:!0,default:[],description:"list of hostname:port, if the port is not present the default port ‘9300’ will be used"},indexName:{type:String,default:"flume",description:"The name of the index which the date will be appended to. Example ‘flume’ -> ‘flume-yyyy-MM-dd’ Arbitrary header substitution is supported, eg. %{header} replaces with value of named event header"},indexType:{type:String,default:"logs",description:"The type to index the document to, defaults to ‘log’ Arbitrary header substitution is supported, eg. %{header} replaces with value of named event header"},clusterName:{type:String,default:"elasticsearch",description:"Name of the ElasticSearch cluster to connect to"},batchSize:{type:Number,default:100,description:"Number of events to be written per txn"},ttl:{type:Number,description:"TTL in days, when set will cause the expired documents to be deleted automatically, if not set documents will never be automatically deleted. TTL is accepted both in the earlier form of integer only e.g. a1.sinks.k1.ttl = 5 and also with a qualifier ms (millisecond), s (second), m (minute), h (hour), d (day) and w (week). Example a1.sinks.k1.ttl = 5d will set TTL to 5 days. Follow http://www.elasticsearch.org/guide/reference/mapping/ttl-field/ for more information"},serializer:{type:String,default:"org.apache.flume.sink.elasticsearch.ElasticSearchLogStashEventSerializer",description:"The ElasticSearchIndexRequestBuilderFactory or ElasticSearchEventSerializer to use. Implementations of either class are accepted but ElasticSearchIndexRequestBuilderFactory is preferred"},"serializer.*":{type:Object,default:{},description:"Properties to be passed to the serializer"}},ve={"kite.dataset.uri":{type:String,required:!0,default:"",description:"URI of the dataset to open"},"kite.repo.uri":{type:String,default:"",description:"URI of the repository to open (deprecated; use kite.dataset.uri instead)"},"kite.dataset.namespace":{type:String,default:"",description:"Namespace of the Dataset where records will be written (deprecated; use kite.dataset.uri instead)"},"kite.dataset.name":{type:String,default:"",description:"Name of the Dataset where records will be written (deprecated; use kite.dataset.uri instead)"},"kite.batchSize":{type:Number,default:100,description:"Number of records to process in each batch"},"kite.rollInterval":{type:Number,default:30,description:"Maximum wait time (seconds) before data files are released"},"kite.flushable.commitOnBatch":{type:Boolean,default:!0,description:"If true, the Flume transaction will be commited and the writer will be flushed on each batch of kite.batchSize records. This setting only applies to flushable datasets. When true, it’s possible for temp files with commited data to be left in the dataset directory. These files need to be recovered by hand for the data to be visible to DatasetReaders"},"kite.syncable.syncOnBatch":{type:Boolean,default:!0,description:"Controls whether the sink will also sync data when committing the transaction. This setting only applies to syncable datasets. Syncing gaurentees that data will be written on stable storage on the remote system while flushing only gaurentees that data has left Flume’s client buffers. When the kite.flushable.commitOnBatch property is set to false, this property must also be set to false"},"kite.entityParser":{type:String,default:"avro",description:"Parser that turns Flume Events into Kite entities. Valid values are avro and the fully-qualified class name of an implementation of the EntityParser.Builder interface"},"kite.failurePolicy":{type:String,default:"retry",description:"Policy that handles non-recoverable errors such as a missing Schema in the Event header. The default value, retry, will fail the current batch and try again which matches the old behavior. Other valid values are save, which will write the raw Event to the kite.error.dataset.uri dataset, and the fully-qualified class name of an implementation of the FailurePolicy.Builder interface"},"kite.error.dataset.uri":{type:String,default:"",description:"URI of the dataset where failed events are saved when kite.failurePolicy is set to save. Required when the kite.failurePolicy is set to save"},"auth.kerberosPrincipal":{type:String,default:"",description:"Kerberos user principal for secure authentication to HDFS"},"auth.kerberosKeytab":{type:String,default:"",description:"Kerberos keytab location (local FS) for the principal"},"auth.proxyUser":{type:String,default:"",description:"The effective user for HDFS actions, if different from the kerberos principal"}},Se={"kafka.bootstrap.servers":{type:Array,default:[],required:!0,description:"List of brokers Kafka-Sink will connect to, to get the list of topic partitions This can be a partial list of brokers, but we recommend at least two for HA. The format is comma separated list of hostname:port"},"kafka.topic":{type:String,default:"default-flume-topic",required:!0,description:"The topic in Kafka to which the messages will be published. If this parameter is configured, messages will be published to this topic. If the event header contains a “topic” field, the event will be published to that topic overriding the topic configured here. Arbitrary header substitution is supported, eg. %{header} is replaced with value of event header named “header”. (If using the substitution, it is recommended to set “auto.create.topics.enable” property of Kafka broker to true.)"},flumeBatchSize:{type:Number,default:1e3,min:0,description:"How many messages to process in one batch. Larger batches improve throughput while adding latency"},"kafka.producer.acks":{type:Number,default:1,min:1,description:"How many replicas must acknowledge a message before its considered successfully written. Accepted values are 0 (Never wait for acknowledgement), 1 (wait for leader only), -1 (wait for all replicas) Set this to -1 to avoid data loss in some cases of leader failure"},useFlumeEventFormat:{type:Boolean,default:!1,description:"By default events are put as bytes onto the Kafka topic directly from the event body. Set to true to store events as the Flume Avro binary format. Used in conjunction with the same property on the KafkaSource or with the parseAsFlumeEvent property on the Kafka Channel this will preserve any Flume headers for the producing side"},defaultPartitionId:{type:String,default:"",description:"Specifies a Kafka partition ID (integer) for all events in this channel to be sent to, unless overriden by partitionIdHeader. By default, if this property is not set, events will be distributed by the Kafka Producer’s partitioner - including by key if specified (or by a partitioner specified by kafka.partitioner.class)"},partitionIdHeader:{type:String,default:"",description:"When set, the sink will take the value of the field named using the value of this property from the event header and send the message to the specified partition of the topic. If the value represents an invalid partition, an EventDeliveryException will be thrown. If the header value is present then this setting overrides defaultPartitionId"},allowTopicOverride:{type:Boolean,default:!0,description:"When set, the sink will allow a message to be produced into a topic specified by the topicHeader property (if provided)"},topicHeader:{type:String,default:"topic",description:"When set in conjunction with allowTopicOverride will produce a message into the value of the header named using the value of this property. Care should be taken when using in conjunction with the Kafka Source topicHeader property to avoid creating a loopback"},"kafka.producer.security.protocol":{type:D.Select,select:["PLAINTEXT","SASL_PLAINTEXT","SASL_SSL","SSL"],default:"PLAINTEXT",description:"Set to SASL_PLAINTEXT, SASL_SSL or SSL if writing to Kafka using some level of security. See below for additional info on secure setup"},"kafka.producer.*":{type:Object,default:{},description:"These properties are used to configure the Kafka Producer. Any producer property supported by Kafka can be used. The only requirement is to prepend the property name with the prefix kafka.producer. For example: kafka.producer.linger.ms"}},ke={endpoint:{type:String,default:"",required:!0,description:"The fully qualified URL endpoint to POST to"},connectTimeout:{type:Number,default:5e3,description:"The socket connection timeout in milliseconds"},requestTimeout:{type:Number,default:5e3,description:"The maximum request processing time in milliseconds"},contentTypeHeader:{type:String,default:"text/plain",description:"The HTTP Content-Type header"},acceptHeader:{type:String,default:"text/plain",description:"The HTTP Accept header value"},defaultBackoff:{type:Boolean,default:!0,description:"Whether to backoff by default on receiving all HTTP status codes"},defaultRollback:{type:Boolean,default:!0,description:"Whether to rollback by default on receiving all HTTP status codes"},defaultIncrementMetrics:{type:Boolean,default:!1,description:"Whether to increment metrics by default on receiving all HTTP status codes"},"backoff.CODE":{type:String,default:"",description:"Configures a specific backoff for an individual (i.e. 200) code or a group (i.e. 2XX) code"},"rollback.CODE":{type:String,default:"",description:"Configures a specific rollback for an individual (i.e. 200) code or a group (i.e. 2XX) code"},"incrementMetrics.CODE":{type:String,default:"",description:"Configures a specific metrics increment for an individual (i.e. 200) code or a group (i.e. 2XX) code"}},we={hdfs:se,hive:le,logger:ce,avro:de,thrift:ue,irc:pe,file_roll:fe,null:fe,hbase:he,hbase2:me,asynchbase:ye,"org.apache.flume.sink.solr.morphline.MorphlineSolrSink":ge,"org.apache.flume.sink.elasticsearch.ElasticSearchSink":be,"org.apache.flume.sink.kite.DatasetSink":ve,"org.apache.flume.sink.kafka.KafkaSink":Se,http:ke},Te=function(){var e=this,t=e.$createElement,i=e._self._c||t;return i("el-table",{staticClass:"config-item-root",attrs:{data:Object.keys(e.properties),stripe:"",border:""}},[i("el-table-column",{attrs:{label:"配置",width:"250"},scopedSlots:e._u([{key:"default",fn:function(t){return[e.properties[t.row].type===Object?i("span",{class:{"config-item-label":!0,required:e.properties[t.row].required}},[i("span",[e._v(e._s(t.row))]),i("el-button",{staticStyle:{"margin-left":"10px"},attrs:{size:"mini",icon:"el-icon-plus",circle:"",type:"primary"},on:{click:function(i){return e.handleAddMapItem(t)}}})],1):i("span",{class:{"config-item-label":!0,required:e.properties[t.row].required}},[e._v(e._s(t.row))])]}}])}),i("el-table-column",{attrs:{label:"值",width:"510"},scopedSlots:e._u([{key:"default",fn:function(t){return[e.properties[t.row].type===Object?i("m-name-value-inputs",{ref:"nv-"+t.row,attrs:{data:e.configData[t.row],size:"small"}}):i("el-form-item",{key:e.index,staticClass:"config-item-form-item"},[e.properties[t.row].type===String?[i("el-input",{staticStyle:{width:"100%"},attrs:{size:"small"},model:{value:e.configData[t.row],callback:function(i){e.$set(e.configData,t.row,i)},expression:"configData[scope.row]"}})]:e.properties[t.row].type===Number?i("el-input-number",{attrs:{min:e.properties[t.row].min,max:e.properties[t.row].max,size:"small"},model:{value:e.configData[t.row],callback:function(i){e.$set(e.configData,t.row,i)},expression:"configData[scope.row]"}}):e.properties[t.row].type===e.Types.Select?i("el-select",{attrs:{size:"small"},model:{value:e.configData[t.row],callback:function(i){e.$set(e.configData,t.row,i)},expression:"configData[scope.row]"}},e._l(e.properties[t.row].select,(function(e){return i("el-option",{key:e,attrs:{label:e,value:e}})})),1):e.properties[t.row].type===Boolean?i("el-checkbox",{attrs:{size:"small"},model:{value:e.configData[t.row],callback:function(i){e.$set(e.configData,t.row,i)},expression:"configData[scope.row]"}},[e._v(e._s(e.configData[t.row]?"true":"false"))]):e.properties[t.row].type===Array?i("el-select",{attrs:{size:"small",multiple:"","allow-create":"",filterable:"","default-first-option":"",placeholder:"请输入，按回车确定"},model:{value:e.configData[t.row],callback:function(i){e.$set(e.configData,t.row,i)},expression:"configData[scope.row]"}}):e._e()],2)]}}])}),i("el-table-column",{attrs:{label:"说明"},scopedSlots:e._u([{key:"default",fn:function(t){return[i("span",[e._v(e._s(e.properties[t.row].description))])]}}])})],1)},xe=[],Ce=i("b85c"),Ne=function(){var e=this,t=e.$createElement,i=e._self._c||t;return i("div",[i("span",[e._v(e._s(e.name))]),i("el-form",{ref:"form",attrs:{model:e.formData}},[e._l(e.formData.data,(function(t,n){return[i("div",{key:n,staticStyle:{display:"inline-block","margin-left":"10px"}},[i("el-form-item",{attrs:{label:"名",prop:"data."+n+".name",size:e.size,rules:e.rules.name}},[i("el-input",{attrs:{size:e.size},model:{value:t.name,callback:function(i){e.$set(t,"name",i)},expression:"item.name"}})],1),i("el-form-item",{attrs:{label:"值",prop:"data."+n+".value",size:e.size,rules:e.rules.value}},[i("el-input",{attrs:{size:e.size},model:{value:t.value,callback:function(i){e.$set(t,"value",i)},expression:"item.value"}})],1),i("el-button",{staticStyle:{"margin-top":"3px"},attrs:{size:"mini",icon:"el-icon-delete",circle:"",type:"danger"},on:{click:function(t){return e.handleDelete(n)}}})],1),(n+1)%3===0?i("br"):e._e()]}))],2)],1)},Ie=[],Ae={name:"m-name-value-inputs",props:{size:String,name:String,data:Object},data:function(){return{formData:{data:this.convertData(this.data)},rules:{name:[{required:!0,message:"请输入名",trigger:"blur"}],value:[{required:!0,message:"请输入值",trigger:"blur"}]}}},methods:{addItem:function(){this.formData.data.push({name:"",value:""})},handleDelete:function(e){this.formData.data.splice(e,1)},convertData:function(e){var t=[];if(e)for(var i in e)t.push({name:i,value:e[i]});return t},getData:function(){return this.formData.data},getName:function(){return this.name},valid:function(){var e=this.$refs["form"].validate((function(e){return e}));console.log(e)}}},De=Ae,ze=Object(T["a"])(De,Ne,Ie,!1,null,null,null),Oe=ze.exports,Pe={name:"config-form-items",components:{MNameValueInputs:Oe},props:{type:String,properties:Object,data:Object},mounted:function(){this.configData.name=this.data.name,this.configData.type=this.data.type,this.initDefaultValues(this.data)},data:function(){return{index:"",configData:{},Types:D,rules:{requiredInput:[{required:!0,message:"请输入",trigger:"blur"}],requiredSelect:[{required:!0,message:"请选择",trigger:"blur"}]}}},methods:{initDefaultValues:function(e){for(var t in e.hasOwnProperty("channels")?this.configData.channels=e.channels:e.hasOwnProperty("channel")&&(this.configData.channel=e.channel),this.properties){var i=this.properties[t],n=i.default;e&&e.hasOwnProperty(t)&&(n=e[t]),this.$set(this.configData,t,n)}},handleAddMapItem:function(e){this.$refs["nv-".concat(e.row)].addItem()},getType:function(){return this.type},getData:function(){var e=Object.keys(this.$refs);if(e.length>0){var t,i=Object(Ce["a"])(e);try{for(i.s();!(t=i.n()).done;){var n=t.value;if(n.startsWith("nv-")){console.log(n,this.$refs[n]);var a=this.$refs[n].getData(),r={};if(a.length>0){var o,s=Object(Ce["a"])(a);try{for(s.s();!(o=s.n()).done;){var l=o.value;r[l.name]=l.value}}catch(d){s.e(d)}finally{s.f()}}var c=n.replace("nv-","");this.configData[c]=r}}}catch(d){i.e(d)}finally{i.f()}}return this.configData}},watch:{"data.type":function(e){this.configData={},this.configData.name=this.data.name,this.configData.type=this.data.type,this.initDefaultValues(this.data)},"data.name":function(e){this.configData.name=this.data.name},"data.channel":function(e){this.configData.channel=this.data.channel},"data.channels":function(){this.configData.channels=this.data.channels}}},_e=Pe,Le=Object(T["a"])(_e,Te,xe,!1,null,null,null),Fe=Le.exports,qe={name:"new-configs",components:{ConfigFormItems:Fe},data:function(){return{Sources:Y,Channels:oe,Sinks:we,activeTab:"Channels",agentNameForm:{agentName:"a1"},channelsActiveCollapse:"",channelForm:{channels:[]},channelsIndex:0,sourcesActiveCollapse:"",sources:[],sourcesIndex:0,sinksActiveCollapse:"",sinks:[],sinksIndex:0,sourceTypes:Object.keys(Y),channelTypes:Object.keys(oe),sinkTypes:Object.keys(we),rules:{agentName:[{required:!0,message:"请输入",trigger:"blur"}],requiredInput:[{required:!0,message:"请输入",trigger:"blur"}],requiredSelect:[{required:!0,message:"请选择",trigger:"blur"}]}}},methods:{handleChannelsCollapseChange:function(e){this.channelsActiveCollapse=e},handleSourcesCollapseChange:function(e){this.sourcesActiveCollapse=e},handleSinksCollapseChange:function(e){this.sinksActiveCollapse=e},handleChannelsAdd:function(e){switch(e){case 1:if(this.channelForm.channels.length>=10)return void this.$message.info("最多添加 10 个 Channels");this.channelForm.channels.push({name:"c"+ ++this.channelsIndex,type:""}),this.channelsActiveCollapse=this.channelForm.channels.length-1;break;case 2:if(this.sources.length>=10)return void this.$message.info("最多添加 10 个 Sources");this.sources.push({name:"r"+ ++this.sourcesIndex,type:"",channels:[]}),this.sourcesActiveCollapse=this.sources.length-1;break;case 3:if(this.sinks.length>=10)return void this.$message.info("最多添加 10 个 Sinks");this.sinks.push({name:"k"+ ++this.sinksIndex,type:"",channel:""}),this.sinksActiveCollapse=this.sinks.length-1;break}},handleItemDelete:function(e,t,i){switch(i.stopPropagation(),i.preventDefault(),e){case 1:this.channelForm.channels.splice(t,1);break;case 2:this.sources.splice(t,1);break;case 3:this.sinks.splice(t,1);break}},handleSave:function(){var e=this,t=this.$loading({lock:!0,text:"拼命加载中...",spinner:"el-icon-loading"}),i=Object.keys(this.$refs);if(0===i.length)return this.$message.warning("请完成配置"),void t.close();for(var n={},a={},r={},o=0,s=i;o<s.length;o++){var l=s[o];if(l.startsWith("channel")){var c=this.$refs[l][0].getData(),d=c.name;if(!d)return this.$message.warning("有 Channel 未指定名称"),void t.close();n[d]=c}else if(l.startsWith("source")){var u=this.$refs[l][0].getData(),p=u.name;if(!p)return this.$message.warning("有 Source 未指定名称"),void t.close();a[p]=u}else if(l.startsWith("sink")){var f=this.$refs[l][0].getData(),h=f.name;if(!h)return this.$message.warning("有 Sink 未指定名称"),void t.close();r[h]=f}}return 0===Object.keys(n).length?(this.$message.warning("最少添加一个 Channel"),void t.close()):0===Object.keys(a).length?(this.$message.warning("最少添加一个 Source"),void t.close()):0===Object.keys(r).length?(this.$message.warning("最少添加一个 Sink"),void t.close()):void this.$prompt("配置名","请输入配置名",{confirmButtonText:"保存",cancelButtonText:"取消",inputValidator:function(e){return e?!(e.length>64)||"配置名最大长度为 64":"请输入配置名"}}).then((function(i){var o=i.value;e.addConfig(o,e.agentNameForm.agentName,n,a,r,t)})).catch((function(){t.close()}))},addConfig:function(e,t,i,n,a,r){var o=this;S.config.addConfig({name:e,agentName:t,channels:JSON.stringify(i,j.deleteKey),sources:JSON.stringify(n,j.deleteKey),sinks:JSON.stringify(a,j.deleteKey)},{useLoading:!1}).then((function(e){r&&r.close(),1===e.code?(o.$message.success("新增成功"),o.$router.replace("/")):o.$message.error(e.message)})).catch((function(){r&&r.close()}))}}},Ee=qe,je=Object(T["a"])(Ee,N,I,!1,null,null,null),Be=je.exports,He=function(){var e=this,t=e.$createElement,i=e._self._c||t;return i("el-container",{staticClass:"global-container"},[i("el-row",[i("el-col",{attrs:{span:12}},[i("span",{staticClass:"back-menu",on:{click:function(t){return e.$router.replace("/")}}},[i("i",{staticClass:"el-icon-arrow-left"}),i("span",[e._v("修改配置 ["+e._s(e.configName)+"]")])])]),i("el-col",{staticStyle:{"text-align":"right"},attrs:{span:12}},[i("el-button",{attrs:{type:"primary",size:"mini"},on:{click:e.handleSave}},[e._v("保存")])],1)],1),i("el-row",{staticStyle:{flex:"1"}},[i("div",{staticStyle:{display:"inline-block",width:"100%"}},[i("el-form",{attrs:{inline:!0,model:e.agentNameForm}},[i("el-form-item",{attrs:{label:"Agent Name",prop:"agentName",rules:e.rules.agentName}},[i("el-input",{attrs:{size:"small"},model:{value:e.agentNameForm.agentName,callback:function(t){e.$set(e.agentNameForm,"agentName",t)},expression:"agentNameForm.agentName"}})],1)],1)],1),i("el-tabs",{model:{value:e.activeTab,callback:function(t){e.activeTab=t},expression:"activeTab"}},[i("el-tab-pane",{attrs:{label:"Channels",name:"Channels"}},[i("div",[i("el-row",[i("el-button",{attrs:{type:"primary",size:"mini"},on:{click:function(t){return e.handleChannelsAdd(1)}}},[e._v("加一个")])],1),i("el-row",[i("el-form",{attrs:{inline:!0,model:e.channelForm}},[e.channelForm.channels&&e.channelForm.channels.length>0?i("el-collapse",{attrs:{accordion:""},on:{change:e.handleChannelsCollapseChange},model:{value:e.channelsActiveCollapse,callback:function(t){e.channelsActiveCollapse=t},expression:"channelsActiveCollapse"}},e._l(e.channelForm.channels,(function(t,n){return i("el-collapse-item",{key:n,attrs:{name:n}},[i("template",{slot:"title"},[e._v(" "+e._s(t.name)+" ["+e._s(t.type)+"] "),i("el-link",{staticStyle:{"margin-left":"10px"},attrs:{underline:!1,type:"danger"},on:{click:function(t){return e.handleItemDelete(1,n,t)}}},[e._v("删除")])],1),i("el-form-item",{attrs:{label:"名称",prop:"channels."+n+".name",rules:e.rules.requiredInput}},[i("el-input",{attrs:{placeholder:"必填",size:"small"},model:{value:t.name,callback:function(i){e.$set(t,"name",i)},expression:"item.name"}})],1),i("el-form-item",{attrs:{label:"类型",prop:"channels."+n+".name",rules:e.rules.requiredSelect}},[i("el-select",{attrs:{placeholder:"请选择",size:"small"},model:{value:t.type,callback:function(i){e.$set(t,"type",i)},expression:"item.type"}},e._l(e.channelTypes,(function(e){return i("el-option",{key:e,attrs:{label:e,value:e}})})),1)],1),i("br"),t.type?i("config-form-items",{ref:"channel-"+n,refInFor:!0,attrs:{type:"channel",properties:e.Channels[t.type],data:e.channelForm.channels[n]}}):e._e()],2)})),1):e._e()],1)],1)],1)]),i("el-tab-pane",{attrs:{label:"Sources",name:"Sources"}},[i("el-row",[i("el-button",{attrs:{type:"primary",size:"mini"},on:{click:function(t){return e.handleChannelsAdd(2)}}},[e._v("加一个")])],1),i("el-row",[i("el-form",{attrs:{inline:!0}},[e.sources&&e.sources.length>0?i("el-collapse",{attrs:{accordion:""},on:{change:e.handleSourcesCollapseChange},model:{value:e.sourcesActiveCollapse,callback:function(t){e.sourcesActiveCollapse=t},expression:"sourcesActiveCollapse"}},e._l(e.sources,(function(t,n){return i("el-collapse-item",{key:n,attrs:{name:n}},[i("template",{slot:"title"},[e._v(" "+e._s(t.name)+" ["+e._s(t.type)+"] "),i("el-link",{staticStyle:{"margin-left":"10px"},attrs:{underline:!1,type:"danger"},on:{click:function(t){return e.handleItemDelete(2,n,t)}}},[e._v("删除")])],1),i("el-form-item",{attrs:{label:"名称",required:""}},[i("el-input",{attrs:{placeholder:"必填",size:"small"},model:{value:t.name,callback:function(i){e.$set(t,"name",i)},expression:"item.name"}})],1),i("el-form-item",{attrs:{label:"类型",required:""}},[i("el-select",{attrs:{placeholder:"请选择",size:"small"},model:{value:t.type,callback:function(i){e.$set(t,"type",i)},expression:"item.type"}},e._l(e.sourceTypes,(function(e){return i("el-option",{key:e,attrs:{label:e,value:e}})})),1)],1),i("el-form-item",{attrs:{label:"Channels",required:""}},[i("el-select",{attrs:{placeholder:"请选择",size:"small",multiple:""},model:{value:t.channels,callback:function(i){e.$set(t,"channels",i)},expression:"item.channels"}},e._l(e.channelForm.channels,(function(e){return i("el-option",{key:e.name,attrs:{label:e.name,value:e.name}})})),1)],1),i("br"),t.type?i("config-form-items",{ref:"source-"+n,refInFor:!0,attrs:{type:"source",properties:e.Sources[t.type],data:e.sources[n]}}):e._e()],2)})),1):e._e()],1)],1)],1),i("el-tab-pane",{attrs:{label:"Sinks",name:"Sinks"}},[i("el-row",[i("el-button",{attrs:{type:"primary",size:"mini"},on:{click:function(t){return e.handleChannelsAdd(3)}}},[e._v("加一个")])],1),i("el-row",[i("el-form",{attrs:{inline:!0}},[e.sinks&&e.sinks.length>0?i("el-collapse",{attrs:{accordion:""},on:{change:e.handleSinksCollapseChange},model:{value:e.sinksActiveCollapse,callback:function(t){e.sinksActiveCollapse=t},expression:"sinksActiveCollapse"}},e._l(e.sinks,(function(t,n){return i("el-collapse-item",{key:n,attrs:{name:n}},[i("template",{slot:"title"},[e._v(" "+e._s(t.name)+" ["+e._s(t.type)+"] "),i("el-link",{staticStyle:{"margin-left":"10px"},attrs:{underline:!1,type:"danger"},on:{click:function(t){return e.handleItemDelete(3,n,t)}}},[e._v("删除")])],1),i("el-form-item",{attrs:{label:"名称",required:""}},[i("el-input",{attrs:{placeholder:"必填",size:"small"},model:{value:t.name,callback:function(i){e.$set(t,"name",i)},expression:"item.name"}})],1),i("el-form-item",{attrs:{label:"类型",required:""}},[i("el-select",{attrs:{placeholder:"请选择",size:"small"},model:{value:t.type,callback:function(i){e.$set(t,"type",i)},expression:"item.type"}},e._l(e.sinkTypes,(function(e){return i("el-option",{key:e,attrs:{label:e,value:e}})})),1)],1),i("el-form-item",{attrs:{label:"Channel",required:""}},[i("el-select",{attrs:{placeholder:"请选择",size:"small"},model:{value:t.channel,callback:function(i){e.$set(t,"channel",i)},expression:"item.channel"}},e._l(e.channelForm.channels,(function(e){return i("el-option",{key:e.name,attrs:{label:e.name,value:e.name}})})),1)],1),i("br"),t.type?i("config-form-items",{ref:"sink-"+n,refInFor:!0,attrs:{type:"sink",properties:e.Sinks[t.type],data:e.sinks[n]}}):e._e()],2)})),1):e._e()],1)],1)],1)],1)],1)],1)},$e=[],Me=i("3c4e"),Ke=i.n(Me),Re={name:"edit-configs",components:{ConfigFormItems:Fe},data:function(){return{merge:Ke.a,Sources:Y,Channels:oe,Sinks:we,activeTab:"Channels",configName:"",agentNameForm:{agentName:""},channelsActiveCollapse:"",channelForm:{channels:[]},channelsIndex:0,sourcesActiveCollapse:"",sources:[],sourcesIndex:0,sinksActiveCollapse:"",sinks:[],sinksIndex:0,sourceTypes:Object.keys(Y),channelTypes:Object.keys(oe),sinkTypes:Object.keys(we),rules:{agentName:[{required:!0,message:"请输入",trigger:"blur"}],requiredInput:[{required:!0,message:"请输入",trigger:"blur"}],requiredSelect:[{required:!0,message:"请选择",trigger:"blur"}]}}},computed:{configId:function(){return this.$route.params.configId}},mounted:function(){this.getConfig(this.$route.params.configId)},methods:{handleChannelsCollapseChange:function(e){this.channelsActiveCollapse=e},handleSourcesCollapseChange:function(e){this.sourcesActiveCollapse=e},handleSinksCollapseChange:function(e){this.sinksActiveCollapse=e},handleChannelsAdd:function(e){switch(e){case 1:if(this.channelForm.channels.length>=10)return void this.$message.info("最多添加 10 个 Channels");this.channelForm.channels.push({name:"c"+ ++this.channelsIndex,type:""}),this.channelsActiveCollapse=this.channelForm.channels.length-1;break;case 2:if(this.sources.length>=10)return void this.$message.info("最多添加 10 个 Sources");this.sources.push({name:"r"+ ++this.sourcesIndex,type:"",channels:[]}),this.sourcesActiveCollapse=this.sources.length-1;break;case 3:if(this.sinks.length>=10)return void this.$message.info("最多添加 10 个 Sinks");this.sinks.push({name:"k"+ ++this.sinksIndex,type:"",channel:""}),this.sinksActiveCollapse=this.sinks.length-1;break}},handleItemDelete:function(e,t,i){switch(i.stopPropagation(),i.preventDefault(),e){case 1:this.channelForm.channels.splice(t,1);break;case 2:this.sources.splice(t,1);break;case 3:this.sinks.splice(t,1);break}},handleSave:function(){var e=this,t=this.$loading({lock:!0,text:"拼命加载中...",spinner:"el-icon-loading"}),i=Object.keys(this.$refs);if(0===i.length)return this.$message.warning("请完成配置"),void t.close();for(var n={},a={},r={},o=0,s=i;o<s.length;o++){var l=s[o];if(l.startsWith("channel")){var c=this.$refs[l][0].getData(),d=c.name;if(!d)return this.$message.warning("有 Channel 未指定名称"),void t.close();n[d]=c}else if(l.startsWith("source")){var u=this.$refs[l][0].getData(),p=u.name;if(!p)return this.$message.warning("有 Source 未指定名称"),void t.close();a[p]=u}else if(l.startsWith("sink")){var f=this.$refs[l][0].getData(),h=f.name;if(!h)return this.$message.warning("有 Sink 未指定名称"),void t.close();r[h]=f}}return 0===Object.keys(n).length?(this.$message.warning("最少添加一个 Channel"),void t.close()):0===Object.keys(a).length?(this.$message.warning("最少添加一个 Source"),void t.close()):0===Object.keys(r).length?(this.$message.warning("最少添加一个 Sink"),void t.close()):void this.$prompt("配置名","请输入配置名",{confirmButtonText:"保存",cancelButtonText:"取消",inputValue:this.configName,inputValidator:function(e){return e?!(e.length>64)||"配置名最大长度为 64":"请输入配置名"}}).then((function(i){var o=i.value;e.updateConfig(o,e.agentNameForm.agentName,n,a,r,t)})).catch((function(){t.close()}))},updateConfig:function(e,t,i,n,a,r){var o=this;S.config.updateConfig(this.configId,{name:e,agentName:t,channels:JSON.stringify(i,j.deleteKey),sources:JSON.stringify(n,j.deleteKey),sinks:JSON.stringify(a,j.deleteKey)},{useLoading:!1}).then((function(e){r&&r.close(),1===e.code?(o.$message.success("修改成功"),o.$router.replace("/")):o.$message.error(e.message)})).catch((function(){r&&r.close()}))},getConfig:function(){var e=this;S.config.getConfig(this.configId).then((function(t){if(1===t.code){var i=t.data;e.agentNameForm.agentName=i.agentName,e.configName=i.name;var n=JSON.parse(i.channels),a=[];for(var r in n)n[r].name=r,a.push(n[r]);var o=JSON.parse(i.sources),s=[];for(var l in o)o[l].name=l,s.push(o[l]);var c=JSON.parse(i.sinks),d=[];for(var u in c)c[u].name=u,d.push(c[u]);e.channelForm.channels=a,e.sources=s,e.sinks=d}else e.$message.error(t.message)}))}}},Je=Re,Ue=Object(T["a"])(Je,He,$e,!1,null,null,null),We=Ue.exports,Xe=function(){var e=this,t=e.$createElement,i=e._self._c||t;return i("el-container",{staticClass:"global-container"},[i("el-row",[i("el-col",{attrs:{span:12}},[i("span",{staticClass:"back-menu",on:{click:function(t){return e.$router.back()}}},[i("i",{staticClass:"el-icon-arrow-left"}),i("span",[e._v("查看 ["+e._s(e.configName)+"]")])])]),i("el-col",{staticStyle:{"text-align":"right"},attrs:{span:12}},[i("el-button",{attrs:{type:"primary",size:"mini"},on:{click:e.handleCopy}},[e._v("复制")])],1)],1),i("el-row",{ref:"content-wrapper",staticClass:"config-text-wrapper",staticStyle:{flex:"1",overflow:"auto","background-color":"#f8f8f8","margin-top":"5px",padding:"5px"},domProps:{innerHTML:e._s(e.configText)}})],1)},Ve=[],Qe=(i("a15b"),i("f904")),Ge=i.n(Qe),Ze={name:"view-config",data:function(){return{configName:"",config:{},configText:""}},mounted:function(){this.getConfig(this.id)},computed:{id:function(){return this.$route.params.configId}},methods:{handleCopy:function(){Ge()(this.$refs["content-wrapper"].$el.innerText,{format:"text/plain"})&&this.$message.success("复制成功")},getConfig:function(e){var t=this;S.config.getConfig(e).then((function(e){1===e.code?(t.config=e.data,t.rendeConfg(t.config)):t.$message.error(e.message)}))},getHtml:function(e,t,i,n,a){var r=[];if(e){var o=Object.keys(e);if(o.length>0){n.push("<span>"+i+"."+t+"="+o.join(" ")+"</span>");var s,l=Object(Ce["a"])(o);try{for(l.s();!(s=l.n()).done;){var c=s.value,d=e[c];for(var u in d)if("sources"===t&&"channels"===u)a.push("<span>"+i+"."+t+"."+c+".channels="+d[u].join(" ")+"</span>");else if("sinks"===t&&"channel"===u)a.push("<span>"+i+"."+t+"."+c+".channel="+d[u]+"</span>");else if(j.isBoolean(d[u]))r.push("<span>"+i+"."+t+"."+c+"."+u+"="+d[u]+"</span>");else if(j.isArray(d[u])&&d[u].length>0){var p=",";if("sources"===t){var f=Y[d.type][u].separator;f&&(p=f)}else if("channels"===t){var h=oe[d.type][u].separator;h&&(p=h)}else if("sinks"===t){var m=we[d.type][u].separator;m&&(p=m)}r.push("<span>"+i+"."+t+"."+c+"."+u+"="+d[u].join(p)+"</span>")}else if(j.isObject(d[u])){var y=u.replace(".*","");for(var g in d[u])r.push("<span>"+i+"."+t+"."+c+"."+y+"."+g+"="+d[u][g]+"</span>")}else d[u]&&r.push("<span>"+i+"."+t+"."+c+"."+u+"="+d[u]+"</span>")}}catch(b){l.e(b)}finally{l.f()}}}return r},rendeConfg:function(e){this.configName=e.name;var t=e.agentName,i=JSON.parse(e.channels),n=JSON.parse(e.sources),a=JSON.parse(e.sinks),r=[],o=[],s=this.getHtml(i,"channels",t,r,o),l=this.getHtml(n,"sources",t,r,o),c=this.getHtml(a,"sinks",t,r,o);this.configText=r.join("")+"<br/>"+s.join("")+"<br/>"+l.join("")+"<br/>"+c.join("")+"<br/>"+o.join("")}}},Ye=Ze,et=(i("da81"),Object(T["a"])(Ye,Xe,Ve,!1,null,null,null)),tt=et.exports,it=function(){var e=this,t=e.$createElement,i=e._self._c||t;return i("div")},nt=[],at={name:"plugins"},rt=at,ot=Object(T["a"])(rt,it,nt,!1,null,null,null),st=ot.exports;n["default"].use(o["a"]);var lt=[{path:"/",name:"configs",component:C},{path:"/configs/new",name:"new-configs",component:Be,meta:{parent:function(){return"/"}}},{path:"/configs/edit/:configId",name:"edit-configs",component:We,meta:{parent:function(){return"/"}}},{path:"/configs/view/:configId",name:"view-config",component:tt,meta:{parent:function(){return"/"}}},{path:"/plugins",name:"plugins",component:st}],ct=new o["a"]({mode:"history",routes:lt}),dt=function(){var e=this,t=e.$createElement,i=e._self._c||t;return i("div",{staticStyle:{height:"100%","overflow-y":"hidden"},attrs:{id:"app"}},[i("el-container",{staticStyle:{height:"100%",position:"relative",bottom:"0","overflow-y":"hidden"}},[i("el-aside",{attrs:{width:"200px"}},[i("el-menu",{staticStyle:{height:"100%"},attrs:{"default-active":e.activeIndex,"background-color":"#303543","text-color":"#fff","active-text-color":"#409EFF",router:!0}},[i("el-menu-item",{attrs:{index:"/"}},[i("template",{slot:"title"},[i("i",{staticClass:"el-icon-s-cooperation"}),i("span",[e._v("配置管理")])])],2)],1)],1),i("el-main",{staticStyle:{"overflow-y":"auto"}},[i("router-view")],1)],1)],1)},ut=[],pt={name:"app",data:function(){return{activeIndex:"/"}},methods:{getActiveIndex:function(e){this.$route.meta.parent?this.activeIndex=this.$route.meta.parent():this.activeIndex=e}},mounted:function(){this.getActiveIndex(this.$route.path)},watch:{"$route.path":function(e){this.getActiveIndex(e)}}},ft=pt,ht=Object(T["a"])(ft,dt,ut,!1,null,null,null),mt=ht.exports;n["default"].use(r.a),n["default"].config.productionTip=!1,new n["default"]({router:ct,render:function(e){return e(mt)}}).$mount("#app")},d645:function(e,t){e.exports={title:"Flume Helper",icon:"",baseUrl:"",httpTimeout:2e4,maxDataTableFieldsLenght:200,maxDataTableIndexesLength:100}},da81:function(e,t,i){"use strict";i("93a0")}});
//# sourceMappingURL=index.36d93c29.js.map